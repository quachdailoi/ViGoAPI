// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deleted_at");

                    b.Property<string>("Registration")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("registration");

                    b.Property<int>("RegistrationType")
                        .HasColumnType("integer")
                        .HasColumnName("registration_type");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer")
                        .HasColumnName("role_id");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("updated_by");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.Property<bool>("Verified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("verified");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.HasIndex("Registration", "RoleId")
                        .IsUnique()
                        .HasFilter("verified = true");

                    b.ToTable("accounts", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2022, 8, 22, 9, 41, 27, 838, DateTimeKind.Utc).AddTicks(3725),
                            CreatedBy = 0,
                            Registration = "loiqdse140970@fpt.edu.vn",
                            RegistrationType = 0,
                            RoleId = 2,
                            UpdatedAt = new DateTime(2022, 8, 22, 9, 41, 27, 838, DateTimeKind.Utc).AddTicks(3726),
                            UpdatedBy = 0,
                            UserId = 2,
                            Verified = true
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 8, 22, 9, 41, 27, 838, DateTimeKind.Utc).AddTicks(3734),
                            CreatedBy = 0,
                            Registration = "+84837226239",
                            RegistrationType = 1,
                            RoleId = 2,
                            UpdatedAt = new DateTime(2022, 8, 22, 9, 41, 27, 838, DateTimeKind.Utc).AddTicks(3734),
                            UpdatedBy = 0,
                            UserId = 2,
                            Verified = false
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2022, 8, 22, 9, 41, 27, 838, DateTimeKind.Utc).AddTicks(3740),
                            CreatedBy = 0,
                            Registration = "loiqdse140970@fpt.edu.vn",
                            RegistrationType = 0,
                            RoleId = 1,
                            UpdatedAt = new DateTime(2022, 8, 22, 9, 41, 27, 838, DateTimeKind.Utc).AddTicks(3740),
                            UpdatedBy = 0,
                            UserId = 5,
                            Verified = false
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2022, 8, 22, 9, 41, 27, 838, DateTimeKind.Utc).AddTicks(3746),
                            CreatedBy = 0,
                            Registration = "+84837226239",
                            RegistrationType = 1,
                            RoleId = 1,
                            UpdatedAt = new DateTime(2022, 8, 22, 9, 41, 27, 838, DateTimeKind.Utc).AddTicks(3746),
                            UpdatedBy = 0,
                            UserId = 5,
                            Verified = true
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2022, 8, 22, 9, 41, 27, 838, DateTimeKind.Utc).AddTicks(3752),
                            CreatedBy = 0,
                            Registration = "datdtse140920@fpt.edu.vn",
                            RegistrationType = 0,
                            RoleId = 2,
                            UpdatedAt = new DateTime(2022, 8, 22, 9, 41, 27, 838, DateTimeKind.Utc).AddTicks(3752),
                            UpdatedBy = 0,
                            UserId = 2,
                            Verified = true
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2022, 8, 22, 9, 41, 27, 838, DateTimeKind.Utc).AddTicks(3759),
                            CreatedBy = 0,
                            Registration = "+84377322919",
                            RegistrationType = 1,
                            RoleId = 2,
                            UpdatedAt = new DateTime(2022, 8, 22, 9, 41, 27, 838, DateTimeKind.Utc).AddTicks(3759),
                            UpdatedBy = 0,
                            UserId = 2,
                            Verified = false
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2022, 8, 22, 9, 41, 27, 838, DateTimeKind.Utc).AddTicks(3765),
                            CreatedBy = 0,
                            Registration = "datdtse140920@fpt.edu.vn",
                            RegistrationType = 0,
                            RoleId = 1,
                            UpdatedAt = new DateTime(2022, 8, 22, 9, 41, 27, 838, DateTimeKind.Utc).AddTicks(3765),
                            UpdatedBy = 0,
                            UserId = 6,
                            Verified = false
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2022, 8, 22, 9, 41, 27, 838, DateTimeKind.Utc).AddTicks(3770),
                            CreatedBy = 0,
                            Registration = "+84377322919",
                            RegistrationType = 1,
                            RoleId = 1,
                            UpdatedAt = new DateTime(2022, 8, 22, 9, 41, 27, 838, DateTimeKind.Utc).AddTicks(3771),
                            UpdatedBy = 0,
                            UserId = 6,
                            Verified = true
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2022, 8, 22, 9, 41, 27, 838, DateTimeKind.Utc).AddTicks(3776),
                            CreatedBy = 0,
                            Registration = "khoandse1409770@fpt.edu.vn",
                            RegistrationType = 0,
                            RoleId = 2,
                            UpdatedAt = new DateTime(2022, 8, 22, 9, 41, 27, 838, DateTimeKind.Utc).AddTicks(3776),
                            UpdatedBy = 0,
                            UserId = 3,
                            Verified = true
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2022, 8, 22, 9, 41, 27, 838, DateTimeKind.Utc).AddTicks(3783),
                            CreatedBy = 0,
                            Registration = "+84914669962",
                            RegistrationType = 1,
                            RoleId = 2,
                            UpdatedAt = new DateTime(2022, 8, 22, 9, 41, 27, 838, DateTimeKind.Utc).AddTicks(3783),
                            UpdatedBy = 0,
                            UserId = 3,
                            Verified = false
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2022, 8, 22, 9, 41, 27, 838, DateTimeKind.Utc).AddTicks(3789),
                            CreatedBy = 0,
                            Registration = "khoandse140977@fpt.edu.vn",
                            RegistrationType = 0,
                            RoleId = 1,
                            UpdatedAt = new DateTime(2022, 8, 22, 9, 41, 27, 838, DateTimeKind.Utc).AddTicks(3789),
                            UpdatedBy = 0,
                            UserId = 7,
                            Verified = false
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2022, 8, 22, 9, 41, 27, 838, DateTimeKind.Utc).AddTicks(3829),
                            CreatedBy = 0,
                            Registration = "+84914669962",
                            RegistrationType = 1,
                            RoleId = 1,
                            UpdatedAt = new DateTime(2022, 8, 22, 9, 41, 27, 838, DateTimeKind.Utc).AddTicks(3829),
                            UpdatedBy = 0,
                            UserId = 7,
                            Verified = true
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(2022, 8, 22, 9, 41, 27, 838, DateTimeKind.Utc).AddTicks(3835),
                            CreatedBy = 0,
                            Registration = "duyttse140971@fpt.edu.vn",
                            RegistrationType = 0,
                            RoleId = 2,
                            UpdatedAt = new DateTime(2022, 8, 22, 9, 41, 27, 838, DateTimeKind.Utc).AddTicks(3836),
                            UpdatedBy = 0,
                            UserId = 4,
                            Verified = true
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTime(2022, 8, 22, 9, 41, 27, 838, DateTimeKind.Utc).AddTicks(3841),
                            CreatedBy = 0,
                            Registration = "+84376826328",
                            RegistrationType = 1,
                            RoleId = 2,
                            UpdatedAt = new DateTime(2022, 8, 22, 9, 41, 27, 838, DateTimeKind.Utc).AddTicks(3841),
                            UpdatedBy = 0,
                            UserId = 4,
                            Verified = false
                        },
                        new
                        {
                            Id = 15,
                            CreatedAt = new DateTime(2022, 8, 22, 9, 41, 27, 838, DateTimeKind.Utc).AddTicks(3847),
                            CreatedBy = 0,
                            Registration = "duyttse140971@fpt.edu.vn",
                            RegistrationType = 0,
                            RoleId = 1,
                            UpdatedAt = new DateTime(2022, 8, 22, 9, 41, 27, 838, DateTimeKind.Utc).AddTicks(3847),
                            UpdatedBy = 0,
                            UserId = 8,
                            Verified = false
                        },
                        new
                        {
                            Id = 16,
                            CreatedAt = new DateTime(2022, 8, 22, 9, 41, 27, 838, DateTimeKind.Utc).AddTicks(3853),
                            CreatedBy = 0,
                            Registration = "+84376826328",
                            RegistrationType = 1,
                            RoleId = 1,
                            UpdatedAt = new DateTime(2022, 8, 22, 9, 41, 27, 838, DateTimeKind.Utc).AddTicks(3853),
                            UpdatedBy = 0,
                            UserId = 8,
                            Verified = true
                        });
                });

            modelBuilder.Entity("Domain.Entities.AppFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Guid>("Code")
                        .HasColumnType("uuid")
                        .HasColumnName("code");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deleted_at");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("path");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean")
                        .HasColumnName("status");

                    b.Property<int>("Type")
                        .HasColumnType("integer")
                        .HasColumnName("type");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("updated_by");

                    b.HasKey("Id");

                    b.ToTable("files", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = new Guid("3cc61659-a3fc-40f4-a768-692870378e42"),
                            CreatedAt = new DateTime(2022, 8, 22, 9, 41, 27, 838, DateTimeKind.Utc).AddTicks(3627),
                            CreatedBy = 0,
                            Path = "abcabc",
                            Status = true,
                            Type = 1,
                            UpdatedAt = new DateTime(2022, 8, 22, 9, 41, 27, 838, DateTimeKind.Utc).AddTicks(3629),
                            UpdatedBy = 0
                        });
                });

            modelBuilder.Entity("Domain.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("roles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 2,
                            Description = "Role for driver",
                            Name = "DRIVER"
                        },
                        new
                        {
                            Id = 1,
                            Description = "Role for booker",
                            Name = "BOOKER"
                        });
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Guid>("Code")
                        .HasColumnType("uuid")
                        .HasColumnName("code");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_of_birth");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deleted_at");

                    b.Property<int?>("FileId")
                        .HasColumnType("integer")
                        .HasColumnName("file_id");

                    b.Property<int>("Gender")
                        .HasColumnType("integer")
                        .HasColumnName("gender");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("name");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("updated_by");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("FileId")
                        .IsUnique();

                    b.ToTable("users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = new Guid("3dc6f0ed-7be3-49b2-ae19-e0215c459235"),
                            CreatedAt = new DateTime(2022, 8, 22, 9, 41, 27, 838, DateTimeKind.Utc).AddTicks(3643),
                            CreatedBy = 0,
                            DateOfBirth = new DateTime(2022, 8, 22, 9, 41, 27, 838, DateTimeKind.Utc).AddTicks(3644),
                            FileId = 1,
                            Gender = 1,
                            Name = "Quach Dai Loi",
                            Status = 1,
                            UpdatedAt = new DateTime(2022, 8, 22, 9, 41, 27, 838, DateTimeKind.Utc).AddTicks(3643),
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 2,
                            Code = new Guid("95e80e41-94fe-48b1-b12d-1a00fb39f5ab"),
                            CreatedAt = new DateTime(2022, 8, 22, 9, 41, 27, 838, DateTimeKind.Utc).AddTicks(3655),
                            CreatedBy = 0,
                            DateOfBirth = new DateTime(2022, 8, 22, 9, 41, 27, 838, DateTimeKind.Utc).AddTicks(3657),
                            Gender = 1,
                            Name = "Do Trong Dat",
                            Status = 1,
                            UpdatedAt = new DateTime(2022, 8, 22, 9, 41, 27, 838, DateTimeKind.Utc).AddTicks(3655),
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 3,
                            Code = new Guid("b803a031-d60e-441d-84a1-7d6134430f34"),
                            CreatedAt = new DateTime(2022, 8, 22, 9, 41, 27, 838, DateTimeKind.Utc).AddTicks(3664),
                            CreatedBy = 0,
                            DateOfBirth = new DateTime(2022, 8, 22, 9, 41, 27, 838, DateTimeKind.Utc).AddTicks(3674),
                            Gender = 1,
                            Name = "Nguyen Dang Khoa",
                            Status = 1,
                            UpdatedAt = new DateTime(2022, 8, 22, 9, 41, 27, 838, DateTimeKind.Utc).AddTicks(3664),
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 4,
                            Code = new Guid("854864b7-a9dc-4914-83c3-7a159093d221"),
                            CreatedAt = new DateTime(2022, 8, 22, 9, 41, 27, 838, DateTimeKind.Utc).AddTicks(3684),
                            CreatedBy = 0,
                            DateOfBirth = new DateTime(2022, 8, 22, 9, 41, 27, 838, DateTimeKind.Utc).AddTicks(3686),
                            Gender = 1,
                            Name = "Than Thanh Duy",
                            Status = 1,
                            UpdatedAt = new DateTime(2022, 8, 22, 9, 41, 27, 838, DateTimeKind.Utc).AddTicks(3685),
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 5,
                            Code = new Guid("7222de4b-69df-42f9-8113-ecbbdda0c673"),
                            CreatedAt = new DateTime(2022, 8, 22, 9, 41, 27, 838, DateTimeKind.Utc).AddTicks(3692),
                            CreatedBy = 0,
                            DateOfBirth = new DateTime(2022, 8, 22, 9, 41, 27, 838, DateTimeKind.Utc).AddTicks(3693),
                            Gender = 1,
                            Name = "Loi Quach",
                            Status = 1,
                            UpdatedAt = new DateTime(2022, 8, 22, 9, 41, 27, 838, DateTimeKind.Utc).AddTicks(3692),
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 6,
                            Code = new Guid("7c02d793-97c3-401a-a31a-49f6cea017e0"),
                            CreatedAt = new DateTime(2022, 8, 22, 9, 41, 27, 838, DateTimeKind.Utc).AddTicks(3701),
                            CreatedBy = 0,
                            DateOfBirth = new DateTime(2022, 8, 22, 9, 41, 27, 838, DateTimeKind.Utc).AddTicks(3702),
                            Gender = 1,
                            Name = "Dat Do",
                            Status = 1,
                            UpdatedAt = new DateTime(2022, 8, 22, 9, 41, 27, 838, DateTimeKind.Utc).AddTicks(3701),
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 7,
                            Code = new Guid("eacb9017-7792-4b03-9ab8-aa510ba9f404"),
                            CreatedAt = new DateTime(2022, 8, 22, 9, 41, 27, 838, DateTimeKind.Utc).AddTicks(3708),
                            CreatedBy = 0,
                            DateOfBirth = new DateTime(2022, 8, 22, 9, 41, 27, 838, DateTimeKind.Utc).AddTicks(3712),
                            Gender = 1,
                            Name = "Khoa Nguyen",
                            Status = 1,
                            UpdatedAt = new DateTime(2022, 8, 22, 9, 41, 27, 838, DateTimeKind.Utc).AddTicks(3709),
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 8,
                            Code = new Guid("d8d1d4a2-1031-4e62-afc4-61d484171018"),
                            CreatedAt = new DateTime(2022, 8, 22, 9, 41, 27, 838, DateTimeKind.Utc).AddTicks(3718),
                            CreatedBy = 0,
                            DateOfBirth = new DateTime(2022, 8, 22, 9, 41, 27, 838, DateTimeKind.Utc).AddTicks(3719),
                            Gender = 1,
                            Name = "Thanh Duy",
                            Status = 1,
                            UpdatedAt = new DateTime(2022, 8, 22, 9, 41, 27, 838, DateTimeKind.Utc).AddTicks(3718),
                            UpdatedBy = 0
                        });
                });

            modelBuilder.Entity("Domain.Entities.VerifiedCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("code");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deleted_at");

                    b.Property<DateTime>("ExpiredTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("expired_time");

                    b.Property<string>("Registration")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("registration");

                    b.Property<int>("RegistrationType")
                        .HasColumnType("integer")
                        .HasColumnName("registration_type");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean")
                        .HasColumnName("status");

                    b.Property<int>("Type")
                        .HasColumnType("integer")
                        .HasColumnName("type");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("updated_by");

                    b.HasKey("Id");

                    b.ToTable("verified_codes", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Account", b =>
                {
                    b.HasOne("Domain.Entities.Role", "Role")
                        .WithMany("Accounts")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany("Accounts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.HasOne("Domain.Entities.AppFile", "File")
                        .WithOne("User")
                        .HasForeignKey("Domain.Entities.User", "FileId");

                    b.Navigation("File");
                });

            modelBuilder.Entity("Domain.Entities.AppFile", b =>
                {
                    b.Navigation("User")
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Entities.Role", b =>
                {
                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Navigation("Accounts");
                });
#pragma warning restore 612, 618
        }
    }
}
