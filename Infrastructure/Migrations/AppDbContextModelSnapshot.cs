// <auto-generated />
using System;
using System.Collections.Generic;
using Domain.Shares.Classes;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("created_by");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deleted_at");

                    b.Property<string>("Registration")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("registration");

                    b.Property<int>("RegistrationType")
                        .HasColumnType("integer")
                        .HasColumnName("registration_type");

                    b.Property<int?>("RoleId")
                        .HasColumnType("integer")
                        .HasColumnName("role_id");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("updated_by");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.Property<bool>("Verified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("verified");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.HasIndex("Registration", "RoleId")
                        .IsUnique()
                        .HasFilter("verified = true and deleted_at = null");

                    b.ToTable("accounts", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
<<<<<<< HEAD
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8166), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4455), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Registration = "loiqdse140970@fpt.edu.vn",
                            RegistrationType = 0,
                            RoleId = 2,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8167), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4456), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0,
                            UserId = 1,
                            Verified = true
                        },
                        new
                        {
                            Id = 2,
<<<<<<< HEAD
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8179), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4469), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Registration = "+84837226239",
                            RegistrationType = 1,
                            RoleId = 2,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8180), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4470), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0,
                            UserId = 1,
                            Verified = false
                        },
                        new
                        {
                            Id = 3,
<<<<<<< HEAD
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8188), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4480), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Registration = "loiqdse140970@fpt.edu.vn",
                            RegistrationType = 0,
                            RoleId = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8189), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4481), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0,
                            UserId = 5,
                            Verified = false
                        },
                        new
                        {
                            Id = 4,
<<<<<<< HEAD
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8197), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4490), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Registration = "+84837226239",
                            RegistrationType = 1,
                            RoleId = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8198), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4491), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0,
                            UserId = 5,
                            Verified = true
                        },
                        new
                        {
                            Id = 5,
<<<<<<< HEAD
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8222), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4526), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Registration = "datdtse140920@fpt.edu.vn",
                            RegistrationType = 0,
                            RoleId = 2,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8222), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4527), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0,
                            UserId = 2,
                            Verified = true
                        },
                        new
                        {
                            Id = 6,
<<<<<<< HEAD
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8231), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4540), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Registration = "+84377322919",
                            RegistrationType = 1,
                            RoleId = 2,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8232), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4541), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0,
                            UserId = 2,
                            Verified = false
                        },
                        new
                        {
                            Id = 7,
<<<<<<< HEAD
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8275), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4550), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Registration = "datdtse140920@fpt.edu.vn",
                            RegistrationType = 0,
                            RoleId = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8276), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4551), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0,
                            UserId = 6,
                            Verified = false
                        },
                        new
                        {
                            Id = 8,
<<<<<<< HEAD
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8285), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4560), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Registration = "+84377322919",
                            RegistrationType = 1,
                            RoleId = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8286), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4562), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0,
                            UserId = 6,
                            Verified = true
                        },
                        new
                        {
                            Id = 9,
<<<<<<< HEAD
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8294), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4572), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Registration = "khoandse1409770@fpt.edu.vn",
                            RegistrationType = 0,
                            RoleId = 2,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8294), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4573), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0,
                            UserId = 3,
                            Verified = true
                        },
                        new
                        {
                            Id = 10,
<<<<<<< HEAD
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8303), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4584), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Registration = "+84914669962",
                            RegistrationType = 1,
                            RoleId = 2,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8304), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4585), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0,
                            UserId = 3,
                            Verified = false
                        },
                        new
                        {
                            Id = 11,
<<<<<<< HEAD
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8312), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4595), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Registration = "khoandse140977@fpt.edu.vn",
                            RegistrationType = 0,
                            RoleId = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8312), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4596), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0,
                            UserId = 7,
                            Verified = false
                        },
                        new
                        {
                            Id = 12,
<<<<<<< HEAD
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8320), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4605), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Registration = "+84914669962",
                            RegistrationType = 1,
                            RoleId = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8321), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4606), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0,
                            UserId = 7,
                            Verified = true
                        },
                        new
                        {
                            Id = 13,
<<<<<<< HEAD
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8328), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4615), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Registration = "duyttse140971@fpt.edu.vn",
                            RegistrationType = 0,
                            RoleId = 2,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8329), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4616), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0,
                            UserId = 4,
                            Verified = true
                        },
                        new
                        {
                            Id = 14,
<<<<<<< HEAD
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8337), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4626), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Registration = "+84376826328",
                            RegistrationType = 1,
                            RoleId = 2,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8337), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4627), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0,
                            UserId = 4,
                            Verified = false
                        },
                        new
                        {
                            Id = 15,
<<<<<<< HEAD
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8345), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4636), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Registration = "duyttse140971@fpt.edu.vn",
                            RegistrationType = 0,
                            RoleId = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8345), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4637), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0,
                            UserId = 8,
                            Verified = false
                        },
                        new
                        {
                            Id = 16,
<<<<<<< HEAD
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8353), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4646), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Registration = "+84376826328",
                            RegistrationType = 1,
                            RoleId = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8354), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4647), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0,
                            UserId = 8,
                            Verified = true
                        },
                        new
                        {
                            Id = 17,
<<<<<<< HEAD
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8361), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4704), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Registration = "+84376826328",
                            RegistrationType = 1,
                            RoleId = 3,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8362), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4706), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0,
                            UserId = 9,
                            Verified = true
                        },
                        new
                        {
                            Id = 18,
<<<<<<< HEAD
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8371), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4724), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Registration = "loiqdse140970@fpt.edu.vn",
                            RegistrationType = 0,
                            RoleId = 3,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8372), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4725), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0,
                            UserId = 9,
                            Verified = true
                        },
                        new
                        {
                            Id = 19,
<<<<<<< HEAD
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8380), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4736), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Registration = "khoandse1409770@fpt.edu.vn",
                            RegistrationType = 0,
                            RoleId = 3,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8381), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4738), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0,
                            UserId = 11,
                            Verified = true
                        },
                        new
                        {
                            Id = 20,
<<<<<<< HEAD
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8389), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4747), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Registration = "+84914669962",
                            RegistrationType = 1,
                            RoleId = 3,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8389), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4748), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0,
                            UserId = 11,
                            Verified = false
                        },
                        new
                        {
                            Id = 21,
<<<<<<< HEAD
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8397), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4757), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Registration = "duyttse140971@fpt.edu.vn",
                            RegistrationType = 0,
                            RoleId = 3,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8398), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4759), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0,
                            UserId = 10,
                            Verified = true
                        },
                        new
                        {
                            Id = 22,
<<<<<<< HEAD
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8405), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4768), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Registration = "+84376826328",
                            RegistrationType = 1,
                            RoleId = 3,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8406), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4769), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0,
                            UserId = 10,
                            Verified = false
                        },
                        new
                        {
                            Id = 23,
<<<<<<< HEAD
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8413), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4778), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Registration = "datdtse140920@fpt.edu.vn",
                            RegistrationType = 0,
                            RoleId = 3,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8414), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4779), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0,
                            UserId = 12,
                            Verified = true
                        },
                        new
                        {
                            Id = 24,
<<<<<<< HEAD
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8421), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4788), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Registration = "+84377322919",
                            RegistrationType = 1,
                            RoleId = 3,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8422), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4789), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0,
                            UserId = 12,
                            Verified = false
                        });
                });

            modelBuilder.Entity("Domain.Entities.AppFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Guid>("Code")
                        .HasColumnType("uuid")
                        .HasColumnName("code");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("created_by");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deleted_at");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("path");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean")
                        .HasColumnName("status");

                    b.Property<int>("Type")
                        .HasColumnType("integer")
                        .HasColumnName("type");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("updated_by");

                    b.HasKey("Id");

                    b.ToTable("files", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
<<<<<<< HEAD
                            Code = new Guid("e3adc677-45ea-4353-9586-3fad3585e4c6"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(7818), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("6faf9c6e-74ad-470e-b5be-d83a9ada4259"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(3933), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Path = "user/avatar/default-user-avatar.png",
                            Status = true,
                            Type = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(7827), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(3957), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 2,
<<<<<<< HEAD
                            Code = new Guid("56d4bd35-7ca8-4b63-ab1d-5dc16ad43519"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(7849), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("2eb98694-3ce8-4f96-9f77-6d7c630a17de"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(3976), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Path = "user/avatar/default-user-avatar.png",
                            Status = true,
                            Type = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(7850), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(3977), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 3,
<<<<<<< HEAD
                            Code = new Guid("daab110b-0e5e-49fd-b770-6a01442f9659"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(7859), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("6a048255-be5c-4f7d-aa20-07fd19a19b79"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(3998), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Path = "user/avatar/default-user-avatar.png",
                            Status = true,
                            Type = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(7860), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(3999), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 4,
<<<<<<< HEAD
                            Code = new Guid("b43244fa-f6ec-4dd6-8ca2-9da0b4244945"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(7868), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("0f5f7743-3b6b-4812-8b65-73f51a644d9f"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4010), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Path = "user/avatar/default-user-avatar.png",
                            Status = true,
                            Type = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(7869), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4011), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 5,
<<<<<<< HEAD
                            Code = new Guid("6322c859-e2ad-4482-8877-d209ba7f57aa"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(7877), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("d5b208ae-bd6b-444a-890e-c1d2a2d61624"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4022), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Path = "user/avatar/default-user-avatar.png",
                            Status = true,
                            Type = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(7878), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4023), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 6,
<<<<<<< HEAD
                            Code = new Guid("53ef1a7a-d224-43ee-9d26-8b2e6e1487ac"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(7898), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("73968078-933f-4b0c-83e8-925375a00ce5"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4092), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Path = "user/avatar/default-user-avatar.png",
                            Status = true,
                            Type = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(7899), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4094), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 7,
<<<<<<< HEAD
                            Code = new Guid("e05c292a-1f38-41e3-8b74-258de542c66a"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(7908), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("badf5168-bb66-4e6e-bbf6-da22d523f99b"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4107), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Path = "user/avatar/default-user-avatar.png",
                            Status = true,
                            Type = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(7909), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4108), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 8,
<<<<<<< HEAD
                            Code = new Guid("cd0e679a-333e-47d8-b1d2-1181e0fc3fb4"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(7917), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("8b46cfde-701a-49e2-a8fb-d8efa41eba60"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4118), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Path = "user/avatar/default-user-avatar.png",
                            Status = true,
                            Type = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(7918), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4119), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 9,
<<<<<<< HEAD
                            Code = new Guid("bcd7b6a0-64f0-4c9f-95d4-c8ef40ab2517"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(7926), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("9c53a6d3-edfd-48b8-bca2-15aca756eb6b"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4129), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Path = "promotion/285640182_5344668362254863_4230282646432249568_n.png",
                            Status = true,
                            Type = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(7926), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4131), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 10,
<<<<<<< HEAD
                            Code = new Guid("e49a2ca8-4ca7-4e48-baa5-259d736543e8"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(7936), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("60dee77d-998c-40af-b9ca-e4523e0c82e5"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4143), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Path = "promotion/292718124_1043378296364294_8747140355237126885_n.png",
                            Status = true,
                            Type = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(7936), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4144), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 11,
<<<<<<< HEAD
                            Code = new Guid("0fc18f6f-13e2-401a-a2d8-2ae0fa6cbe68"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(7945), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("0abbfbfa-f898-4b6a-b5d1-d26cf3573609"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4158), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Path = "promotion/300978304_2290809087749954_8259423704505319939_n.png",
                            Status = true,
                            Type = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(7945), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4159), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 12,
<<<<<<< HEAD
                            Code = new Guid("6c00dd10-91ec-4515-95e4-165ab537eced"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(7954), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("f48cdb5b-177e-4471-a103-42c5cf364cff"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4170), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Path = "promotion/300978304_2290809087749954_8259423704505319939_n.png",
                            Status = true,
                            Type = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(7954), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4171), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 13,
<<<<<<< HEAD
                            Code = new Guid("ea4e9c62-1fc3-44b5-b402-4162e62a930a"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(7962), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("a54444dc-3dde-4a04-b849-8f98ed6be777"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4181), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Path = "user/avatar/default-user-avatar.png",
                            Status = true,
                            Type = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(7963), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4183), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        });
                });

            modelBuilder.Entity("Domain.Entities.Banner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true)
                        .HasColumnName("active");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("content");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("created_by");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deleted_at");

                    b.Property<int>("FileId")
                        .HasColumnType("integer")
                        .HasColumnName("file_id");

                    b.Property<int?>("Priority")
                        .HasColumnType("integer")
                        .HasColumnName("priority");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("updated_by");

                    b.HasKey("Id");

                    b.HasIndex("FileId")
                        .IsUnique();

                    b.ToTable("banners", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            Content = "Banner 1",
<<<<<<< HEAD
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9164), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = 0,
                            FileId = 9,
                            Priority = 1,
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9165), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5701), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = 0,
                            FileId = 9,
                            Priority = 1,
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5701), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            Content = "Banner 2",
<<<<<<< HEAD
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9169), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = 0,
                            FileId = 10,
                            Priority = 2,
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9170), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5706), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = 0,
                            FileId = 10,
                            Priority = 2,
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5707), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            Content = "Banner 3",
<<<<<<< HEAD
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9171), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = 0,
                            FileId = 11,
                            Priority = 3,
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9172), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5708), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = 0,
                            FileId = 11,
                            Priority = 3,
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5709), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            Content = "Banner 4",
<<<<<<< HEAD
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9173), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = 0,
                            FileId = 12,
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9173), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5710), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = 0,
                            FileId = 12,
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5711), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        });
                });

            modelBuilder.Entity("Domain.Entities.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Guid>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
<<<<<<< HEAD
                        .HasDefaultValue(new Guid("5324c07d-e87e-47a5-9f53-313cbb0cf196"))
=======
                        .HasDefaultValue(new Guid("7581f2f5-f7c4-4e9b-9e25-de5596f5278c"))
>>>>>>> booking_datdt
                        .HasColumnName("code");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("created_by");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deleted_at");

                    b.Property<double>("DiscountPrice")
                        .HasColumnType("double precision")
                        .HasColumnName("discount_price");

                    b.Property<double>("Distance")
                        .HasColumnType("double precision")
                        .HasColumnName("distance");

                    b.Property<double>("Duration")
                        .HasColumnType("double precision")
                        .HasColumnName("duration");

                    b.Property<DateOnly>("EndAt")
                        .HasColumnType("date")
                        .HasColumnName("end_at");

                    b.Property<Guid>("EndStationCode")
                        .HasColumnType("uuid")
                        .HasColumnName("end_station_code");

                    b.Property<bool>("IsShared")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_shared");

                    b.Property<int>("Option")
                        .HasColumnType("integer")
                        .HasColumnName("option");

                    b.Property<int>("PaymentMethod")
                        .HasColumnType("integer")
                        .HasColumnName("payment_method");

                    b.Property<int?>("PromotionId")
                        .HasColumnType("integer")
                        .HasColumnName("promotion_id");

                    b.Property<int>("RouteId")
                        .HasColumnType("integer")
                        .HasColumnName("route_id");

                    b.Property<DateOnly>("StartAt")
                        .HasColumnType("date")
                        .HasColumnName("start_at");

                    b.Property<Guid>("StartStationCode")
                        .HasColumnType("uuid")
                        .HasColumnName("start_station_code");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.Property<TimeOnly>("Time")
                        .HasColumnType("time without time zone")
                        .HasColumnName("time");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("double precision")
                        .HasColumnName("total_price");

                    b.Property<int>("Type")
                        .HasColumnType("integer")
                        .HasColumnName("type");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("updated_by");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.Property<int>("VehicleTypeId")
                        .HasColumnType("integer")
                        .HasColumnName("vehicle_type_id");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("PromotionId");

                    b.HasIndex("RouteId");

                    b.HasIndex("UserId");

                    b.HasIndex("VehicleTypeId");

                    b.ToTable("bookings", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.BookingDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BookingId")
                        .HasColumnType("integer")
                        .HasColumnName("booking_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("created_by");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deleted_at");

                    b.Property<double>("DiscountPrice")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("double precision")
                        .HasDefaultValue(0.0)
                        .HasColumnName("discount_price");

                    b.Property<int?>("DriverId")
                        .HasColumnType("integer")
                        .HasColumnName("driver_id");

                    b.Property<string>("FeedBack")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)")
                        .HasColumnName("feedback");

                    b.Property<int?>("MessageRoomId")
                        .HasColumnType("integer")
                        .HasColumnName("message_room_id");

                    b.Property<double>("Price")
                        .HasColumnType("double precision")
                        .HasColumnName("price");

                    b.Property<double>("Rating")
                        .HasColumnType("double precision")
                        .HasColumnName("rating");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("updated_by");

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.HasIndex("DriverId");

                    b.HasIndex("MessageRoomId")
                        .IsUnique();

                    b.ToTable("booking_details", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.BookingDetailDriver", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BookingDetailId")
                        .HasColumnType("integer")
                        .HasColumnName("booking_detail_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("created_by");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deleted_at");

                    b.Property<int>("DriverId")
                        .HasColumnType("integer")
                        .HasColumnName("driver_id");

                    b.Property<TimeOnly>("EndTime")
                        .HasColumnType("time without time zone")
                        .HasColumnName("end_time");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time without time zone")
                        .HasColumnName("start_time");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("updated_by");

                    b.HasKey("Id");

                    b.HasIndex("BookingDetailId");

                    b.HasIndex("DriverId");

                    b.ToTable("booking_detail_drivers", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Fare", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BaseDistance")
                        .HasColumnType("integer")
                        .HasColumnName("base_distance");

                    b.Property<double>("BasePrice")
                        .HasColumnType("double precision")
                        .HasColumnName("base_price");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("created_by");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deleted_at");

                    b.Property<double>("PricePerKm")
                        .HasColumnType("double precision")
                        .HasColumnName("price_per_km");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("updated_by");

                    b.Property<int>("VehicleTypeId")
                        .HasColumnType("integer")
                        .HasColumnName("vehicle_type_id");

                    b.HasKey("Id");

                    b.HasIndex("VehicleTypeId")
                        .IsUnique();

                    b.ToTable("fares", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BaseDistance = 2000,
                            BasePrice = 12000.0,
<<<<<<< HEAD
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9240), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = 0,
                            PricePerKm = 4000.0,
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9240), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5794), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = 0,
                            PricePerKm = 4000.0,
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5795), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0,
                            VehicleTypeId = 1
                        },
                        new
                        {
                            Id = 2,
                            BaseDistance = 2000,
                            BasePrice = 20000.0,
<<<<<<< HEAD
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9244), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = 0,
                            PricePerKm = 10000.0,
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9244), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5798), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = 0,
                            PricePerKm = 10000.0,
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5799), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0,
                            VehicleTypeId = 2
                        },
                        new
                        {
                            Id = 3,
                            BaseDistance = 2000,
                            BasePrice = 30000.0,
<<<<<<< HEAD
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9246), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = 0,
                            PricePerKm = 12000.0,
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9246), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5800), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = 0,
                            PricePerKm = 12000.0,
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5801), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0,
                            VehicleTypeId = 3
                        });
                });

            modelBuilder.Entity("Domain.Entities.FareTimeline", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("created_by");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deleted_at");

                    b.Property<TimeOnly>("EndTime")
                        .HasColumnType("time without time zone")
                        .HasColumnName("end_time");

                    b.Property<double>("ExtraFeePerKm")
                        .HasColumnType("double precision")
                        .HasColumnName("extra_fee_per_km");

                    b.Property<int>("FareId")
                        .HasColumnType("integer")
                        .HasColumnName("fare_id");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time without time zone")
                        .HasColumnName("start_time");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("updated_by");

                    b.HasKey("Id");

                    b.HasIndex("FareId");

                    b.ToTable("fare_timelines", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
<<<<<<< HEAD
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9258), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5895), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            EndTime = new TimeOnly(8, 0, 0),
                            ExtraFeePerKm = 0.12,
                            FareId = 1,
                            StartTime = new TimeOnly(6, 0, 0),
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9259), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5897), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 2,
<<<<<<< HEAD
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9297), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5950), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            EndTime = new TimeOnly(10, 0, 0),
                            ExtraFeePerKm = 0.10000000000000001,
                            FareId = 1,
                            StartTime = new TimeOnly(8, 0, 0),
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9297), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5950), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 3,
<<<<<<< HEAD
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9304), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5959), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            EndTime = new TimeOnly(17, 0, 0),
                            ExtraFeePerKm = 0.14999999999999999,
                            FareId = 1,
                            StartTime = new TimeOnly(15, 0, 0),
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9305), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5960), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 4,
<<<<<<< HEAD
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9311), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5968), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            EndTime = new TimeOnly(19, 0, 0),
                            ExtraFeePerKm = 0.10000000000000001,
                            FareId = 1,
                            StartTime = new TimeOnly(17, 0, 0),
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9311), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5968), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 5,
<<<<<<< HEAD
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9317), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5976), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            EndTime = new TimeOnly(8, 0, 0),
                            ExtraFeePerKm = 0.12,
                            FareId = 2,
                            StartTime = new TimeOnly(6, 0, 0),
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9318), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5976), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 6,
<<<<<<< HEAD
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9325), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5986), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            EndTime = new TimeOnly(10, 0, 0),
                            ExtraFeePerKm = 0.10000000000000001,
                            FareId = 2,
                            StartTime = new TimeOnly(8, 0, 0),
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9326), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5986), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 7,
<<<<<<< HEAD
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9332), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5994), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            EndTime = new TimeOnly(17, 0, 0),
                            ExtraFeePerKm = 0.14999999999999999,
                            FareId = 2,
                            StartTime = new TimeOnly(15, 0, 0),
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9332), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5995), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 8,
<<<<<<< HEAD
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9339), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(6002), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            EndTime = new TimeOnly(19, 0, 0),
                            ExtraFeePerKm = 0.10000000000000001,
                            FareId = 2,
                            StartTime = new TimeOnly(17, 0, 0),
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9339), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(6003), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 9,
<<<<<<< HEAD
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9345), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(6010), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            EndTime = new TimeOnly(8, 0, 0),
                            ExtraFeePerKm = 0.12,
                            FareId = 3,
                            StartTime = new TimeOnly(6, 0, 0),
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9346), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(6011), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 10,
<<<<<<< HEAD
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9353), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(6019), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            EndTime = new TimeOnly(10, 0, 0),
                            ExtraFeePerKm = 0.10000000000000001,
                            FareId = 3,
                            StartTime = new TimeOnly(8, 0, 0),
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9353), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(6020), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 11,
<<<<<<< HEAD
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9360), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(6028), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            EndTime = new TimeOnly(17, 0, 0),
                            ExtraFeePerKm = 0.14999999999999999,
                            FareId = 3,
                            StartTime = new TimeOnly(15, 0, 0),
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9360), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(6028), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 12,
<<<<<<< HEAD
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9366), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(6036), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            EndTime = new TimeOnly(19, 0, 0),
                            ExtraFeePerKm = 0.10000000000000001,
                            FareId = 3,
                            StartTime = new TimeOnly(17, 0, 0),
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9367), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(6036), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        });
                });

            modelBuilder.Entity("Domain.Entities.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("content");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("created_by");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deleted_at");

                    b.Property<int>("RoomId")
                        .HasColumnType("integer")
                        .HasColumnName("room_id");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(1)
                        .HasColumnName("status");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("updated_by");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("RoomId"), "hash");

                    b.HasIndex("UserId");

                    b.ToTable("messages", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Promotion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("code");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("created_by");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deleted_at");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("details");

                    b.Property<double>("DiscountPercentage")
                        .HasColumnType("double precision")
                        .HasColumnName("discount_percentage");

                    b.Property<int?>("FileId")
                        .HasColumnType("integer")
                        .HasColumnName("file_id");

                    b.Property<double>("MaxDecrease")
                        .HasColumnType("double precision")
                        .HasColumnName("max_decrease");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("name");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.Property<int>("Type")
                        .HasColumnType("integer")
                        .HasColumnName("type");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("updated_by");

                    b.HasKey("Id");

                    b.HasIndex("FileId")
                        .IsUnique();

                    b.ToTable("promotions", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "HELLO2022",
<<<<<<< HEAD
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8437), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4805), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Details = "Promotion for new user: Discount 20% with max decrease 200k for the booking with minimum total price 500k.",
                            DiscountPercentage = 0.20000000000000001,
                            FileId = 9,
                            MaxDecrease = 200000.0,
                            Name = "New User Promotion",
                            Status = 1,
                            Type = 2,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8438), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4806), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 2,
                            Code = "BDAY2022",
<<<<<<< HEAD
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8453), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4819), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Details = "Promotion for September: Discount 10% with max decrease 150k for the booking with minimum total price 200k.",
                            DiscountPercentage = 0.10000000000000001,
                            FileId = 10,
                            MaxDecrease = 150000.0,
                            Name = "Beautiful Month",
                            Status = 1,
                            Type = 0,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8454), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4820), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 3,
                            Code = "HOLIDAY",
<<<<<<< HEAD
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8463), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4830), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Details = "Promotion for 2/9 Holiday: Discount 30% with max decrease 300k for the booking with minimum total price 1000k.",
                            DiscountPercentage = 0.29999999999999999,
                            MaxDecrease = 300000.0,
                            Name = "Holiday Promotion",
                            Status = 1,
                            Type = 0,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8464), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4831), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 4,
                            Code = "ABC",
<<<<<<< HEAD
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8472), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4840), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Details = "Promotion for users booking alot: Discount 10% with max decrease 300k for the booking with minimum total price 500k.",
                            DiscountPercentage = 0.10000000000000001,
                            FileId = 11,
                            MaxDecrease = 300000.0,
                            Name = "ABC Promotion",
                            Status = 1,
                            Type = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8473), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4841), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 5,
                            Code = "VIRIDE2022",
<<<<<<< HEAD
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8520), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4850), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Details = "Promotion for ViRide: Discount 10% with max decrease 100k for the booking with minimum total price 300k.",
                            DiscountPercentage = 0.10000000000000001,
                            FileId = 11,
                            MaxDecrease = 100000.0,
                            Name = "ViRide Promotion",
                            Status = 1,
                            Type = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8521), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4852), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 6,
                            Code = "VICAR2022",
<<<<<<< HEAD
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8533), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4862), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Details = "Promotion for ViCar: Discount 15% with max decrease 350k for the booking with minimum total price 500k.",
                            DiscountPercentage = 0.14999999999999999,
                            FileId = 11,
                            MaxDecrease = 350000.0,
                            Name = "ViCar Promotion",
                            Status = 1,
                            Type = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8534), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4863), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        });
                });

            modelBuilder.Entity("Domain.Entities.PromotionCondition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("created_by");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deleted_at");

                    b.Property<int?>("MinTickets")
                        .HasColumnType("integer")
                        .HasColumnName("min_tickets");

                    b.Property<float?>("MinTotalPrice")
                        .HasColumnType("real")
                        .HasColumnName("min_total_price");

                    b.Property<int?>("PaymentMethods")
                        .HasColumnType("integer")
                        .HasColumnName("payment_methods");

                    b.Property<int?>("PromotionId")
                        .IsRequired()
                        .HasColumnType("integer")
                        .HasColumnName("promotion_id");

                    b.Property<int?>("TotalUsage")
                        .HasColumnType("integer")
                        .HasColumnName("total_usage");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("updated_by");

                    b.Property<int?>("UsagePerUser")
                        .HasColumnType("integer")
                        .HasColumnName("usage_per_user");

                    b.Property<DateTimeOffset?>("ValidFrom")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("valid_from");

                    b.Property<DateTimeOffset?>("ValidUntil")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("valid_until");

                    b.Property<int?>("VehicleTypes")
                        .HasColumnType("integer")
                        .HasColumnName("vehicle_types");

                    b.HasKey("Id");

                    b.HasIndex("PromotionId")
                        .IsUnique();

                    b.ToTable("promotion_conditions", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
<<<<<<< HEAD
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8545), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = 0,
                            MinTotalPrice = 500000f,
                            PromotionId = 1,
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8546), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4876), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = 0,
                            MinTotalPrice = 500000f,
                            PromotionId = 1,
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4877), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0,
                            UsagePerUser = 1,
                            ValidFrom = new DateTimeOffset(new DateTime(2022, 1, 1, 0, 0, 1, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 2,
<<<<<<< HEAD
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8648), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4992), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            MinTotalPrice = 200000f,
                            PromotionId = 2,
                            TotalUsage = 50,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8649), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4993), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0,
                            UsagePerUser = 4,
                            ValidFrom = new DateTimeOffset(new DateTime(2022, 9, 1, 0, 0, 1, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            ValidUntil = new DateTimeOffset(new DateTime(2022, 9, 30, 23, 59, 59, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 3,
<<<<<<< HEAD
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8671), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5021), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            MinTotalPrice = 1000000f,
                            PromotionId = 3,
                            TotalUsage = 50,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8671), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5023), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0,
                            UsagePerUser = 1,
                            ValidFrom = new DateTimeOffset(new DateTime(2022, 9, 2, 0, 0, 1, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            ValidUntil = new DateTimeOffset(new DateTime(2022, 9, 2, 23, 59, 59, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 4,
<<<<<<< HEAD
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8690), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5046), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            MinTickets = 20,
                            MinTotalPrice = 500000f,
                            PromotionId = 4,
                            TotalUsage = 50,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8691), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5047), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0,
                            UsagePerUser = 1,
                            ValidFrom = new DateTimeOffset(new DateTime(2022, 9, 2, 0, 0, 1, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            ValidUntil = new DateTimeOffset(new DateTime(2022, 9, 30, 23, 59, 59, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 5,
<<<<<<< HEAD
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8709), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5069), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            MinTotalPrice = 300000f,
                            PromotionId = 5,
                            TotalUsage = 500,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8710), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5071), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0,
                            UsagePerUser = 3,
                            ValidFrom = new DateTimeOffset(new DateTime(2022, 1, 1, 0, 0, 1, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            ValidUntil = new DateTimeOffset(new DateTime(2022, 12, 31, 23, 59, 59, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            VehicleTypes = 0
                        },
                        new
                        {
                            Id = 6,
<<<<<<< HEAD
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8730), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5097), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            MinTotalPrice = 500000f,
                            PromotionId = 6,
                            TotalUsage = 500,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8731), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5098), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0,
                            UsagePerUser = 3,
                            ValidFrom = new DateTimeOffset(new DateTime(2022, 1, 1, 0, 0, 1, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            ValidUntil = new DateTimeOffset(new DateTime(2022, 12, 31, 23, 59, 59, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            VehicleTypes = 1
                        });
                });

            modelBuilder.Entity("Domain.Entities.PromotionUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("created_by");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deleted_at");

                    b.Property<DateTimeOffset?>("ExpiredTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("expired_time");

                    b.Property<int?>("PromotionConditionId")
                        .HasColumnType("integer");

                    b.Property<int>("PromotionId")
                        .HasColumnType("integer")
                        .HasColumnName("promotion_id");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("updated_by");

                    b.Property<int>("Used")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("used");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("PromotionConditionId");

                    b.HasIndex("UserId");

                    b.HasIndex("PromotionId", "UserId")
                        .IsUnique();

                    b.ToTable("promotion_users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
<<<<<<< HEAD
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8755), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = 0,
                            ExpiredTime = new DateTimeOffset(new DateTime(2022, 10, 1, 0, 0, 1, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            PromotionId = 1,
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8756), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5178), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = 0,
                            ExpiredTime = new DateTimeOffset(new DateTime(2022, 10, 1, 0, 0, 1, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            PromotionId = 1,
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5179), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0,
                            Used = 0,
                            UserId = 5
                        },
                        new
                        {
                            Id = 2,
<<<<<<< HEAD
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8778), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = 0,
                            ExpiredTime = new DateTimeOffset(new DateTime(2022, 10, 1, 0, 0, 1, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            PromotionId = 1,
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8778), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5207), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = 0,
                            ExpiredTime = new DateTimeOffset(new DateTime(2022, 10, 1, 0, 0, 1, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            PromotionId = 1,
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5209), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0,
                            Used = 1,
                            UserId = 6
                        },
                        new
                        {
                            Id = 3,
<<<<<<< HEAD
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8795), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = 0,
                            ExpiredTime = new DateTimeOffset(new DateTime(2022, 9, 1, 0, 0, 1, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            PromotionId = 1,
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8796), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5228), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = 0,
                            ExpiredTime = new DateTimeOffset(new DateTime(2022, 9, 1, 0, 0, 1, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            PromotionId = 1,
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5229), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0,
                            Used = 0,
                            UserId = 7
                        },
                        new
                        {
                            Id = 4,
<<<<<<< HEAD
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8811), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = 0,
                            PromotionId = 2,
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8812), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5248), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = 0,
                            PromotionId = 2,
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5250), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0,
                            Used = 2,
                            UserId = 6
                        });
                });

            modelBuilder.Entity("Domain.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("roles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 2,
                            Description = "Role for driver",
                            Name = "DRIVER"
                        },
                        new
                        {
                            Id = 1,
                            Description = "Role for booker",
                            Name = "BOOKER"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Role for admin",
                            Name = "ADMIN"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Guid>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
<<<<<<< HEAD
                        .HasDefaultValue(new Guid("f3ffc3dd-74a3-43d9-b841-32f50becde0e"))
=======
                        .HasDefaultValue(new Guid("36e1a3c5-9997-4e00-a39a-acaa8dbf7fff"))
>>>>>>> booking_datdt
                        .HasColumnName("code");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("created_by");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deleted_at");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("name");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(1)
                        .HasColumnName("status");

                    b.Property<int>("Type")
                        .HasColumnType("integer")
                        .HasColumnName("type");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("updated_by");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("rooms", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Route", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Bound>("Bound")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("bound");

                    b.Property<Guid>("Code")
                        .HasColumnType("uuid")
                        .HasColumnName("code");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("created_by");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deleted_at");

                    b.Property<double>("Distance")
                        .HasColumnType("double precision")
                        .HasColumnName("distance");

                    b.Property<double>("Duration")
                        .HasColumnType("double precision")
                        .HasColumnName("duration");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.Property<List<Step>>("Steps")
                        .IsRequired()
                        .HasColumnType("jsonb[]")
                        .HasColumnName("steps");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("updated_by");

                    b.HasKey("Id");

                    b.ToTable("routes", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.RouteRoutine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("created_by");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deleted_at");

                    b.Property<DateOnly>("EndAt")
                        .HasColumnType("date")
                        .HasColumnName("end_at");

                    b.Property<TimeOnly>("EndTime")
                        .HasColumnType("time without time zone")
                        .HasColumnName("end_time");

                    b.Property<int>("RouteId")
                        .HasColumnType("integer")
                        .HasColumnName("route_id");

                    b.Property<DateOnly>("StartAt")
                        .HasColumnType("date")
                        .HasColumnName("start_at");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time without time zone")
                        .HasColumnName("start_time");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(1)
                        .HasColumnName("status");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("updated_by");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("RouteId");

                    b.HasIndex("UserId");

                    b.ToTable("route_routines", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.RouteStation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("created_by");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deleted_at");

                    b.Property<double>("DistanceFromFirstStationInRoute")
                        .HasColumnType("double precision")
                        .HasColumnName("distance_from_first_station_in_route");

                    b.Property<double>("DurationFromFirstStationInRoute")
                        .HasColumnType("double precision")
                        .HasColumnName("duration_from_first_station_in_route");

                    b.Property<int>("Index")
                        .HasColumnType("integer")
                        .HasColumnName("index");

                    b.Property<int?>("NextRouteStationId")
                        .HasColumnType("integer")
                        .HasColumnName("next_route_station_id");

                    b.Property<int>("RouteId")
                        .HasColumnType("integer")
                        .HasColumnName("route_id");

                    b.Property<int>("StationId")
                        .HasColumnType("integer")
                        .HasColumnName("station_id");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("updated_by");

                    b.HasKey("Id");

                    b.HasIndex("NextRouteStationId")
                        .IsUnique();

                    b.HasIndex("RouteId");

                    b.HasIndex("StationId");

                    b.ToTable("route_stations", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Station", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("address");

                    b.Property<Guid>("Code")
                        .HasColumnType("uuid")
                        .HasColumnName("code");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("created_by");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deleted_at");

                    b.Property<double>("Latitude")
                        .HasColumnType("double precision")
                        .HasColumnName("latitude");

                    b.Property<double>("Longitude")
                        .HasColumnType("double precision")
                        .HasColumnName("longitude");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("name");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("updated_by");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("stations", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "80 Xa lộ Hà Nội, Bình An, Dĩ An, Bình Dương",
<<<<<<< HEAD
                            Code = new Guid("34685df0-2655-429d-80ce-dcd803df877f"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8832), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("75a943b8-ce41-4c86-ab9b-be9d860b453d"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5274), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Latitude = 10.879650683124561,
                            Longitude = 106.81402589177823,
                            Name = "Ga Metro Bến Xe Suối Tiên",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8833), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5274), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 2,
                            Address = "39708 Xa lộ Hà Nội, Linh Trung, Thành phố Thủ Đức, Thành phố Hồ Chí Minh",
<<<<<<< HEAD
                            Code = new Guid("c7fbccce-3d90-4265-90ce-0272b140a75b"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8838), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("439b409d-7612-4c2e-87b5-3e359d6cc24c"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5280), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Latitude = 10.8664854431366,
                            Longitude = 106.80126112015681,
                            Name = "Ga Metro Đại học Quốc Gia",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8839), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5281), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 3,
                            Address = "4/16B Xa lộ Hà Nội, Linh Trung, Thành phố Thủ Đức, Thành phố Hồ Chí Minh",
<<<<<<< HEAD
                            Code = new Guid("f2d6f760-3b97-4f6a-8169-a617070f2956"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8840), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("f3e2b891-4f39-452d-a06e-e81d08b470d4"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5284), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Latitude = 10.85917304306453,
                            Longitude = 106.78884645537156,
                            Name = "Ga Metro Công Viên Công Nghệ Cao",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8841), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5284), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 4,
                            Address = "RQWC+GJX Xa lộ Hà Nội, Bình Thọ, Thành phố Thủ Đức, Thành phố Hồ Chí Minh",
<<<<<<< HEAD
                            Code = new Guid("d328e5d1-86b3-404c-b9c7-5644ac439ae2"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8843), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("d2b7041d-6315-4724-a5b1-3f9929a8b1ff"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5287), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Latitude = 10.846402468851362,
                            Longitude = 106.77154946668446,
                            Name = "Ga Metro Thủ Đức",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8843), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5288), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 5,
                            Address = "88 Nguyễn Văn Bá, Phước Long A, Thành phố Thủ Đức, Thành phố Hồ Chí Minh",
<<<<<<< HEAD
                            Code = new Guid("9eac3b36-0b89-4a41-8dea-85086e3f44b0"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8845), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("c494f204-c9d8-468a-bda5-1145fa2de96c"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5290), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Latitude = 10.821402021794112,
                            Longitude = 106.75836408336727,
                            Name = "Ga Metro Phước Long",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8845), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5291), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 6,
                            Address = "RQ54+93V Xa lộ Hà Nội, An Phú, Thành phố Thủ Đức, Thành phố Hồ Chí Minh",
<<<<<<< HEAD
                            Code = new Guid("1c676333-3d90-4ca2-958f-8e9d2fc4a4a7"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8849), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("19992df9-cb88-47e2-af79-2e29541cd3d1"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5303), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Latitude = 10.808505238748038,
                            Longitude = 106.75523952123311,
                            Name = "Ga Metro Gạch Chiếc",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8849), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5304), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 7,
                            Address = "RP2R+VV9 Xa lộ Hà Nội, Thảo Điền, Thành phố Thủ Đức, Thành phố Hồ Chí Minh",
<<<<<<< HEAD
                            Code = new Guid("93ab2fea-a127-42a6-8c1b-bc34bfa6bd5d"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8851), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("148c7e87-c57c-498b-8936-56d5f0ed38d3"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5306), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Latitude = 10.802254217820691,
                            Longitude = 106.74223332879555,
                            Name = "Ga Metro An Phú",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8852), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5307), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 8,
                            Address = "763J Quốc Hương, Thảo Điền, Thành phố Thủ Đức, Thành phố Hồ Chí Minh",
<<<<<<< HEAD
                            Code = new Guid("3141c460-3d9c-4932-a851-b55edb518f1d"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8854), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("538264b4-754d-4238-9c40-0479493e9f5f"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5310), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Latitude = 10.800728306627473,
                            Longitude = 106.73370791313042,
                            Name = "Ga Metro Thảo Điền",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8855), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5310), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 9,
                            Address = "QPXF+C8J Nguyễn Hữu Cảnh, 25, Bình Thạnh, Thành phố Hồ Chí Minh, Việt Nam",
<<<<<<< HEAD
                            Code = new Guid("d43e3e71-3628-4ade-9cd8-82cad8d086f7"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8858), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("275a3df4-0840-4ece-bb60-d3e1da2b7d46"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5312), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Latitude = 10.798621063183687,
                            Longitude = 106.72327125155881,
                            Name = "Ga Metro Tân Cảng",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8858), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5313), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 10,
                            Address = "QPW8+C5Q, Phường 22, Bình Thạnh, Thành phố Hồ Chí Minh",
<<<<<<< HEAD
                            Code = new Guid("7e52aae3-1023-460f-9c5d-24b296ef7ef2"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8861), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("72cb26ba-15d6-40f4-9d15-6e5c922b1c5c"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5317), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Latitude = 10.796160596763055,
                            Longitude = 106.71548797723645,
                            Name = "Ga Metro Khu du lịch Văn Thánh",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8862), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5317), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 11,
                            Address = "39761 Nguyễn Văn Bá, Phước Long B, Thành phố Thủ Đức, Thành phố Hồ Chí Minh",
<<<<<<< HEAD
                            Code = new Guid("73c9744c-ef37-4f22-90aa-8ff5ddab956b"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8864), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("045f9486-6325-48ed-b8bb-3465763fecb6"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5320), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Latitude = 10.836558412392224,
                            Longitude = 106.76576466834388,
                            Name = "Ga Metro Bình Thái",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8864), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5320), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 12,
                            Address = "Đường D1, Tân Phú, Thành phố Thủ Đức, Thành phố Hồ Chí Minh",
<<<<<<< HEAD
                            Code = new Guid("acc19b5e-9dd7-460f-9cec-8745749af2c6"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8866), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("f6155671-afc8-4402-a2fe-32540aa325e8"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5323), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Latitude = 10.855748533595877,
                            Longitude = 106.78914067676806,
                            Name = "AI InnovationHub",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8867), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5324), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 13,
                            Address = "Đường D1, Tân Phú, Thành phố Thủ Đức, Thành phố Hồ Chí Minh",
<<<<<<< HEAD
                            Code = new Guid("db8857da-05c4-40e1-9b5b-4d906f233394"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8869), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("86b28393-71be-4879-a665-45de9f80df98"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5326), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Latitude = 10.853144521692798,
                            Longitude = 106.79643313765459,
                            Name = "Tòa nhà HD Bank",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8869), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5327), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 14,
                            Address = "Đường D1, Tân Phú, Thành phố Thủ Đức, Thành phố Hồ Chí Minh ",
<<<<<<< HEAD
                            Code = new Guid("1c902264-c40f-4b4a-9859-bcdd72f81d71"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8871), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("959bac61-9e13-47b2-bdd6-abdf71955e37"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5332), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Latitude = 10.851138424399943,
                            Longitude = 106.79857191639908,
                            Name = "FPT Software - Ftown 1,2",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8872), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5333), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 15,
                            Address = "Đường D1, Long Thạnh Mỹ, Thành phố Thủ Đức, Thành phố Hồ Chí Minh",
<<<<<<< HEAD
                            Code = new Guid("773f5cf7-f49b-4848-b49c-7f1a7cf4f8af"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8873), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("67aa3bbd-bdb9-44ec-8440-95c7b932c5cd"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5335), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Latitude = 10.842755223277589,
                            Longitude = 106.80737654998441,
                            Name = "Tòa nhà VPI phía Nam",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8874), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5336), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 16,
                            Address = "Đường D1, Long Thạnh Mỹ, Thành phố Thủ Đức, Thành phố Hồ Chí Minh",
<<<<<<< HEAD
                            Code = new Guid("c6b6b20a-0b51-4fec-a67f-b8fc418142a7"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8876), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("afa9d6ec-d6a8-489b-beb0-37bc1f95e1d1"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5338), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Latitude = 10.841160382489567,
                            Longitude = 106.80898373894351,
                            Name = "Viện công nghệ cao Hutech",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8876), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5339), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 17,
                            Address = "RRP7+CJ7 đường D1, Long Thạnh Mỹ, Thành phố Thủ Đức, Thành phố Hồ Chí Minh",
<<<<<<< HEAD
                            Code = new Guid("62df3792-4b91-439a-83ea-c59cdc2846ca"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8921), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("954b0a80-9b8b-4667-9d2f-b327f61a3499"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5341), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Latitude = 10.836238463608794,
                            Longitude = 106.814245107947,
                            Name = "Cổng Jabil Việt Nam",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8921), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5341), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 18,
                            Address = "Đường D1, Long Thạnh Mỹ, Thành phố Thủ Đức, Thành phố Hồ Chí Minh",
<<<<<<< HEAD
                            Code = new Guid("79cf1623-5af0-4f27-8a88-a71a64656712"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8925), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("b4115e36-5d78-43fd-a420-e5c028783ff5"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5345), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Latitude = 10.832233088594503,
                            Longitude = 106.82046132230808,
                            Name = "Saigon Silicon",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8925), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5345), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 19,
                            Address = "Đường D1, Long Thạnh Mỹ, Thành phố Thủ Đức, Thành phố Hồ Chí Minh",
<<<<<<< HEAD
                            Code = new Guid("3d81a4a3-7527-4f60-b006-ccb699f57b49"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8927), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("71abe904-8a37-4312-a0c9-870da990237b"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5348), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Latitude = 10.836776238894464,
                            Longitude = 106.81401100053891,
                            Name = "ISMARTCITY (ISC)",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8928), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5348), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 20,
                            Address = "Đường D1, Long Thạnh Mỹ, Thành phố Thủ Đức, Thành phố Hồ Chí Minh",
<<<<<<< HEAD
                            Code = new Guid("80c78efc-64e0-435a-8017-d5d9606d0ab8"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8930), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("0082a638-2c72-449e-9e32-e3dcc3165442"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5351), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Latitude = 10.840578398658391,
                            Longitude = 106.8099978721756,
                            Name = "Trường đại học FPT",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8930), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5351), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 21,
                            Address = "Đường D1, Long Thạnh Mỹ, Thành phố Thủ Đức, Thành phố Hồ Chí Minh",
<<<<<<< HEAD
                            Code = new Guid("988a759b-63bd-4446-9b70-f17b716469e1"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8932), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("dd80f45b-4ada-401d-a307-f587a705faa4"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5353), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Latitude = 10.84578835745819,
                            Longitude = 106.80454376198392,
                            Name = "Công Ty CP Công Nghệ Sinh Học Dược Nanogen",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8933), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5354), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 22,
                            Address = "Đường D1, Tân Phú, Thành phố Thủ Đức, Thành phố Hồ Chí Minh",
<<<<<<< HEAD
                            Code = new Guid("a59a35a8-c598-44c6-8978-c2c865d5fa06"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8934), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("242b0997-1e5e-427c-8ee4-ab4ff4db08c8"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5359), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Latitude = 10.853375488919204,
                            Longitude = 106.79658230436019,
                            Name = "Intel VietNam",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8935), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5359), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 88,
                            Address = "Đường D1, Tân Phú, Thành phố Thủ Đức, Thành phố Hồ Chí Minh",
<<<<<<< HEAD
                            Code = new Guid("a6011d50-80d7-4098-b3e6-c90cf5a95769"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8936), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("a83aa131-e5af-41a0-9d61-c2f03fe55f87"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5363), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Latitude = 10.854367872934622,
                            Longitude = 106.79375338625633,
                            Name = "Nidec VietNam",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8937), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5363), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 23,
                            Address = "Đường D1, Tân Phú, Thành phố Thủ Đức, Thành phố Hồ Chí Minh",
<<<<<<< HEAD
                            Code = new Guid("d9d8f272-a3e6-48d6-a2fa-8f548cdd9733"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8939), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("461ce3a8-c441-41c7-af82-6644cfc2c044"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5367), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Latitude = 10.854860900718421,
                            Longitude = 106.79189382870402,
                            Name = "CMC Data Center",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8939), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5367), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 24,
                            Address = "Đường D1, Tân Phú, Thành phố Thủ Đức, Thành phố Hồ Chí Minh",
<<<<<<< HEAD
                            Code = new Guid("342b0709-6432-4b70-9448-c49d6555d405"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8942), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("a9982128-7783-4fa4-8474-65857e41cdd0"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5369), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Latitude = 10.856082809107784,
                            Longitude = 106.78924956530844,
                            Name = "Inverter ups Sài Gòn",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8943), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5370), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 25,
                            Address = "Đường Võ Chí Công, Long Thạnh Mỹ, Thành phố Thủ Đức, Thành phố Hồ Chí Minh",
<<<<<<< HEAD
                            Code = new Guid("58d6d970-e4c1-45f8-a2c7-fe7a056a3996"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8945), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("5ea3ac5e-2f00-4a06-8b19-2f1b7ba25051"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5372), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Latitude = 10.838027429470513,
                            Longitude = 106.81035219090674,
                            Name = "Trường đại học Nguyễn Tất Thành",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8945), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5373), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 26,
                            Address = "Đường Võ Chí Công, Long Thạnh Mỹ, Thành phố Thủ Đức, Thành phố Hồ Chí Minh",
<<<<<<< HEAD
                            Code = new Guid("03a6a354-7fdf-48a4-9cb1-7efb381d9afc"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8948), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("7cc9e6ca-0efe-49aa-9bda-d2f2e99863a8"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5375), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Latitude = 10.834922120966135,
                            Longitude = 106.80776601621393,
                            Name = "FPT Software - Ftown 3",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8949), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5376), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 27,
                            Address = "RRM4+VMQ đường Võ Chí Công, Long Thạnh Mỹ, Thành phố Thủ Đức, Thành phố Hồ Chí Minh",
<<<<<<< HEAD
                            Code = new Guid("ee427141-54d2-4b1f-ab36-ff652fffd73d"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8950), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("5acddbb5-a962-4ca2-9a2c-91362b4a78ef"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5378), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Latitude = 10.834215900566933,
                            Longitude = 106.80727419233645,
                            Name = "Công ty Cổ phần Hàng không VietJet",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8951), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5379), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 28,
                            Address = "RRJ4+X9F đường Võ Chí Công, Long Thạnh Mỹ, Thành phố Thủ Đức, Thành phố Hồ Chí Minh",
<<<<<<< HEAD
                            Code = new Guid("82b90967-e20e-4f5d-91ed-618df44cd132"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8953), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("a6092846-c1e1-4a64-9919-37efbfcad12c"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5381), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Latitude = 10.832245246386895,
                            Longitude = 106.80598499131753,
                            Name = "Sài Gòn Trapoco",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8953), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5381), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 29,
                            Address = "RRJ4+G2J đường Võ Chí Công, Long Thạnh Mỹ, Thành phố Thủ Đức, Thành phố Hồ Chí Minh",
<<<<<<< HEAD
                            Code = new Guid("44e08d69-7766-4505-a537-d7d954855f38"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8955), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("d00600b7-3a35-488b-a97b-542f740ae3fe"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5386), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Latitude = 10.830911650064834,
                            Longitude = 106.80503995362199,
                            Name = "Công ty kỹ thuật công nghệ cao sài gòn",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8955), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5387), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 30,
                            Address = "Đường D2, Tăng Nhơn Phú B, Thành phố Thủ Đức, Thành phố Hồ Chí Minh",
<<<<<<< HEAD
                            Code = new Guid("9a2a1a3e-1df3-4dbe-9b76-6bde27ff06ba"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8957), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("2ad46359-5067-4a5b-8576-580159be6b45"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5389), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Latitude = 10.825858875527519,
                            Longitude = 106.79860212469366,
                            Name = "Nhà máy Samsung Khu CNC",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8957), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5390), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 31,
                            Address = "Đường D2, Tăng Nhơn Phú B, Thành phố Thủ Đức, Thành phố Hồ Chí Minh",
<<<<<<< HEAD
                            Code = new Guid("af191a4d-e6f5-405c-97f1-9c101793542a"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8959), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("b0378c62-b42f-4932-a984-2b28a6c51797"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5392), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Latitude = 10.826685687856866,
                            Longitude = 106.8001755286645,
                            Name = "Công ty công nghệ cao Điện Quang",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8960), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5393), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 32,
                            Address = "G23 Lã Xuân Oai, Long Thạnh Mỹ, Thành phố Thủ Đức, Thành phố Hồ Chí Minh",
<<<<<<< HEAD
                            Code = new Guid("a5959626-ab86-48f4-a69e-080dee61610f"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8963), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("fa735513-1d76-4311-ba81-2f2ff85d2f92"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5396), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Latitude = 10.829932294153192,
                            Longitude = 106.80446003004153,
                            Name = "Công ty Thảo Dược Việt Nam",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8963), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5396), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 33,
                            Address = "1-2 đường D2, Long Thạnh Mỹ, Thành phố Thủ Đức, Thành phố Hồ Chí Minh",
<<<<<<< HEAD
                            Code = new Guid("0b5ef008-014f-4b9e-becc-e29feccbae82"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8967), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("8dfbc496-c76f-418a-bc2d-a9301b61170c"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5447), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Latitude = 10.830577375598693,
                            Longitude = 106.80512235256614,
                            Name = "Công ty Daihan Vina",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8967), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5448), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 34,
                            Address = "VQ8Q+W5W QL 1A, Linh Trung, Thành phố Thủ Đức, Thành phố Hồ Chí Minh",
<<<<<<< HEAD
                            Code = new Guid("dbc3eff7-406a-43ff-8ab8-e07ce4ac03e7"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8969), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("717ee950-525e-4c71-80a3-4f9c433bc791"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5451), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Latitude = 10.867306661370069,
                            Longitude = 106.78773791444128,
                            Name = "Trường Đại học Nông Lâm",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8970), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5452), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 35,
                            Address = "QL 1A, Linh Xuân, Thành phố Thủ Đức, Thành phố Hồ Chí Minh",
<<<<<<< HEAD
                            Code = new Guid("c8e41870-743b-48a0-bbfa-8907a024c517"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8972), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("cc4ce4b0-f192-4493-877b-d8a8bf480de6"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5454), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Latitude = 10.869235667646493,
                            Longitude = 106.77793783791677,
                            Name = "Trường đại học Kinh Tế Luật",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8972), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5455), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 36,
                            Address = "VRC2+QR9, Linh Trung, Thành phố Thủ Đức, Thành phố Hồ Chí Minh",
<<<<<<< HEAD
                            Code = new Guid("777b8ff8-316e-459f-b726-c11771b9f56e"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8974), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("ceca582e-be55-4d07-afe8-3f27f5170e01"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5457), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Latitude = 10.871997549994893,
                            Longitude = 106.80277007274188,
                            Name = "Đại học Khoa học Xã hội và Nhân văn",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8974), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5458), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 37,
                            Address = "VRF2+XFW đường Quảng Trường Sáng Tạo, Đông Hoà, Dĩ An, Bình Dương",
<<<<<<< HEAD
                            Code = new Guid("9571ace3-1af6-460e-8fd7-31094548534b"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8976), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("ea7a9de1-d43d-428e-9c5a-22b2446191f1"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5463), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Latitude = 10.875092307642346,
                            Longitude = 106.80144678877895,
                            Name = "Nhà Văn Hóa Sinh Viên ĐHQG",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8976), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5463), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 38,
                            Address = "Đường Hàn Thuyên, Linh Trung, Thành phố Thủ Đức, Thành phố Hồ Chí Minh",
<<<<<<< HEAD
                            Code = new Guid("5a9d192a-4420-48ee-b078-6339a5e8910b"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8978), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("c665dea8-d940-45c7-8cc0-ae36a1a7cda7"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5466), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Latitude = 10.870481440652956,
                            Longitude = 106.80198596270417,
                            Name = "Cổng A - Trường đại học Công Nghệ Thông Tin",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8979), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5466), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 39,
                            Address = "VQCW+FG2, Linh Trung, Thành phố Thủ Đức, Thành phố Hồ Chí Minh",
<<<<<<< HEAD
                            Code = new Guid("41a7daa0-3d8a-4e7e-872f-75ab27f58664"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8980), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("bf9e0f4f-12b1-42a2-ac95-aa393de6194b"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5468), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Latitude = 10.870503469555034,
                            Longitude = 106.79628492520538,
                            Name = "Trường đại học Thể dục Thể thao",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8981), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5469), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 40,
                            Address = "Đường T1, Linh Trung, Thành phố Thủ Đức, Thành phố Hồ Chí Minh",
<<<<<<< HEAD
                            Code = new Guid("c0f5389b-90c1-4c4c-8835-4cf20dd37a76"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8984), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("bcac80dd-ef16-484a-a9c2-3e06e2efff75"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5471), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Latitude = 10.875477130935243,
                            Longitude = 106.79903376051722,
                            Name = "Trường đại học Khoa học Tự nhiên (cơ sở Linh Trung)",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8985), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5472), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 41,
                            Address = "Đường Quảng Trường Sáng Tạo, Linh Trung, Thành phố Thủ Đức, Thành phố Hồ Chí Minh",
<<<<<<< HEAD
                            Code = new Guid("a732c81b-8b65-45f7-9b38-55011b2defb8"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8986), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("ddeb612d-6b22-4a14-86f9-2fcbed9c2471"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5474), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Latitude = 10.876446815885343,
                            Longitude = 106.80177999819321,
                            Name = "Trường đại học Quốc Tế",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8987), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5475), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 42,
                            Address = "Đường Tạ Quang Bửu, Linh Trung, Thành phố Thủ Đức, Thành phố Hồ Chí Minh",
<<<<<<< HEAD
                            Code = new Guid("7fd6dfdb-0995-43a2-833f-37ad84418722"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8988), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("e1a23067-183e-48e7-a773-061eebb7ccc7"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5477), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Latitude = 10.878197830285536,
                            Longitude = 106.80614795287057,
                            Name = "Cổng kí túc xá khu A (đại học quốc gia TP Hồ Chí Minh)",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8989), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5478), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 43,
                            Address = "Đường Tạ Quang Bửu, Đông Hòa, Dĩ An, Bình Dương",
<<<<<<< HEAD
                            Code = new Guid("b349f8c9-31cd-4f3f-8b2f-72d4a8a65ceb"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8991), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("fd71d39e-b610-4e2c-9449-81a06967ee26"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5480), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Latitude = 10.879768516539494,
                            Longitude = 106.80697880277312,
                            Name = "Trường đại học Bách Khoa (cơ sở 2)",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8991), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5480), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 44,
                            Address = "Đường Tạ Quang Bửu, Đông Hòa, Dĩ An, Bình Dương",
<<<<<<< HEAD
                            Code = new Guid("62b7505c-8d20-4a39-ad86-a9202dd6a57c"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8993), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("833a51a1-f319-4767-afd7-14462d957335"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5483), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Latitude = 10.877545337230165,
                            Longitude = 106.80552329008295,
                            Name = "Trung tâm ngoại ngữ đại học Bách Khoa (BK English)",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8993), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5483), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 45,
                            Address = "Số 1 đường Võ Văn Ngân, Linh Chiểu, Thành phố Thủ Đức, Thành phố Hồ Chí Minh",
<<<<<<< HEAD
                            Code = new Guid("6b7deb6e-d04f-4433-89c2-97fc53f5bd57"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8995), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("f03ee2d5-2b9c-4bf9-8b0c-eb5138a9b76e"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5489), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Latitude = 10.849721027334326,
                            Longitude = 106.77164269167564,
                            Name = "Trường đại học Sư phạm Kĩ thuật Thành phố Hồ Chí Minh",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8995), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5490), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 46,
                            Address = "VQ25+JWQ đường Chương Dương, Linh Chiểu, Thành phố Thủ Đức, Thành phố Hồ Chí Minh",
<<<<<<< HEAD
                            Code = new Guid("96a665bd-8945-441c-8111-e3df012907dc"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8997), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("f252202f-d96d-4a86-9457-1de3e87c3db9"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5492), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Latitude = 10.851623294286195,
                            Longitude = 106.7599477126918,
                            Name = "Trường Cao đẳng Công nghệ Thủ Đức",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8998), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5493), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 50,
                            Address = "26 đường Chương Dương, Linh Chiểu, Thành phố Thủ Đức, Thành phố Hồ Chí Minh",
<<<<<<< HEAD
                            Code = new Guid("e64cffbd-50f5-4cc4-a12f-e47bbb62ff45"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8999), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("8348cc54-973e-4705-b2ce-279393a83ffd"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5495), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Latitude = 10.852653003274197,
                            Longitude = 106.76018734231964,
                            Name = "Trung tâm thể dục thể thao Thủ Đức",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9000), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5496), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 51,
                            Address = "19A đường số 17, Linh Chiểu, Thành phố Thủ Đức, Thành phố Hồ Chí Minh",
<<<<<<< HEAD
                            Code = new Guid("669281e5-463b-4597-ab2d-0767b9332762"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9003), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("826f7fc0-97d3-4885-a48d-b752d2b3bc18"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5498), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Latitude = 10.854723648720167,
                            Longitude = 106.76032173572378,
                            Name = "Trường Cao đẳng Nghề Thành phố Hồ Chí Minh",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9004), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5499), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 52,
                            Address = "VQ46+9J3 đường số 17, Linh Chiểu, Thành phố Thủ Đức, Thành phố Hồ Chí Minh",
<<<<<<< HEAD
                            Code = new Guid("fdc4811f-0460-4e4c-bd83-0d1caa7cad97"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9005), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("1ca32dd6-75d6-4816-b55c-1d2851b22ef5"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5501), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Latitude = 10.855800383594074,
                            Longitude = 106.76151598927879,
                            Name = "Trường đại học Ngân hàng",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9006), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5501), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 53,
                            Address = "356 Xa lộ Hà Nội, Phước Long A, Thành phố Thủ Đức, Thành phố Hồ Chí Minh",
<<<<<<< HEAD
                            Code = new Guid("5e44125e-7b8b-4af1-b94a-7288ce439a86"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9008), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("1d0bfbd3-a13f-4bc7-8dbd-33ebee3b6297"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5504), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Latitude = 10.83090741994997,
                            Longitude = 106.76359240459003,
                            Name = "Trường đại học Điện Lực",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9009), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5505), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 54,
                            Address = "360 Xa lộ Hà Nội, Phước Long A, Thành phố Thủ Đức, Thành phố Hồ Chí Minh",
<<<<<<< HEAD
                            Code = new Guid("88129499-3452-4ede-acfd-e07a8f5e0851"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9010), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("031ca1f1-2a3d-4cee-9bfb-bea0ca903e5c"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5507), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Latitude = 10.831781684548069,
                            Longitude = 106.76462343340792,
                            Name = "Metro Star - Quận 9 | Tập đoàn CT Group+",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9011), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5507), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 55,
                            Address = "354-356B Xa lộ Hà Nội, Phước Long A, Thành phố Thủ Đức, Thành phố Hồ Chí Minh",
<<<<<<< HEAD
                            Code = new Guid("8c2fbcdb-8a63-41c4-a75f-fbed1122bbb7"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9012), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("f1b5b9eb-cf9e-41ac-afa1-4e3726a8b954"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5510), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Latitude = 10.830438851236304,
                            Longitude = 106.76388396745739,
                            Name = "Chi nhánh công ty CyberTech Việt Nam",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9013), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5510), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 56,
                            Address = "RQH7+XP4 Xa lộ, Phước Long A, Thành phố Thủ Đức, Thành phố Hồ Chí Minh",
<<<<<<< HEAD
                            Code = new Guid("3403f9be-90a7-46ea-ae3d-cdd26137227d"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9015), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("37856f11-003c-4451-bd31-06ad9b8abc6e"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5515), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Latitude = 10.829834904338366,
                            Longitude = 106.76426274528296,
                            Name = "Zenpix Việt Nam",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9015), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5516), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 57,
                            Address = "12 Đặng Văn Bi, Trường Thọ, Thành phố Thủ Đức, Thành phố Hồ Chí Minh",
<<<<<<< HEAD
                            Code = new Guid("20e703ed-1437-47c3-bd2b-b1974de07853"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9017), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("c15b93b2-a9c6-4c91-9b82-9aaa5cc1c568"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5518), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Latitude = 10.840946385700587,
                            Longitude = 106.76509820241216,
                            Name = "Nhà máy sữa Thống Nhất (Vinamilk)",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9017), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5519), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 58,
                            Address = "10/42 đường Số 4, Trường Thọ, Thành phố Thủ Đức, Thành phố Hồ Chí Minh",
<<<<<<< HEAD
                            Code = new Guid("3b35956f-4577-429c-8655-0a2dd3df3870"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9019), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("a1a1c377-803e-4988-87d7-599f9e702e83"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5521), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Latitude = 10.840432688988782,
                            Longitude = 106.76088713432273,
                            Name = "Công ty xuất nhập khẩu Tây Tiến",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9019), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5522), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 59,
                            Address = "102 Đặng Văn Bi, Bình Thọ, Thành phố Thủ Đức, Thành phố Hồ Chí Minh",
<<<<<<< HEAD
                            Code = new Guid("4b56b0c0-cabf-4d9b-ae1b-84b869f7c7d1"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9045), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("261386c4-cc56-4f43-b2fb-761ddb70d892"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5524), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Latitude = 10.844257732572313,
                            Longitude = 106.76276736279874,
                            Name = "Trung tâm tiêm chủng vắc xin VNVC",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9046), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5524), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 60,
                            Address = "Km9 Xa lộ Hà Nội, Phước Long A, Thành phố Thủ Đức, Thành phố Hồ Chí Minh",
<<<<<<< HEAD
                            Code = new Guid("92488346-5e3d-481d-840c-c2c1c9a8e17f"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9048), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("d754f1d2-563d-4dad-9319-36b715c96c60"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5527), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Latitude = 10.825780208240717,
                            Longitude = 106.75924170740572,
                            Name = "Công ty cổ phần Thép Thủ Đức",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9048), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5527), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 61,
                            Address = "Km9 Xa lộ Hà Nội, Phước Long A, Thành phố Thủ Đức, Thành phố Hồ Chí Minh",
<<<<<<< HEAD
                            Code = new Guid("e81387ba-c1bb-4810-89a4-367dc5e5de8f"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9050), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("6e858d85-0c7c-4a6f-9df2-7ab0507ad4ae"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5529), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Latitude = 10.82825779372371,
                            Longitude = 106.76092968863129,
                            Name = "Công Ty Cổ Phần Cơ Điện Thủ Đức",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9050), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5530), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 62,
                            Address = "RQH5+324 đường Số 1, Trường Thọ, Thành phố Thủ Đức, Thành phố Hồ Chí Minh",
<<<<<<< HEAD
                            Code = new Guid("1067f4c9-4851-4635-a4ad-f87f63f97e87"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9052), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("ed55d16c-2573-4e37-90a0-b53dccbe7873"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5532), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Latitude = 10.827423240919156,
                            Longitude = 106.75761821078893,
                            Name = "Công ty TNHH Nhiệt điện Thủ Đức",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9052), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5533), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 63,
                            Address = "Đường Số 1, Trường Thọ, Thành phố Thủ Đức, Thành phố Hồ Chí Minh",
<<<<<<< HEAD
                            Code = new Guid("33cb3367-67ac-464c-9640-ad1fcb1740c3"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9054), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("6cfde001-38a2-4829-82d9-e33dd40ab933"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5535), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Latitude = 10.827933659643358,
                            Longitude = 106.75322566624341,
                            Name = "Cảng Trường Thọ",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9055), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5536), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 64,
                            Address = "96 Nam Hòa, Phước Long A, Thành phố Thủ Đức, Thành phố Hồ Chí Minh",
<<<<<<< HEAD
                            Code = new Guid("46702a35-901e-4223-9ea9-014d1a8991af"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9056), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("4ac559f3-f38a-42e7-991c-3ce0c7bdb258"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5541), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Latitude = 10.82037580579453,
                            Longitude = 106.75928223003976,
                            Name = "Công ty TNHH BeuHomes",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9057), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5541), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 65,
                            Address = "9 Nam Hòa, Phước Long A, Thành phố Thủ Đức, Thành phố Hồ Chí Minh",
<<<<<<< HEAD
                            Code = new Guid("a0ecb1e9-cb3a-459b-8a88-853fa84c2097"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9059), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("081394ed-2181-455b-9051-7d7ad0a67b7c"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5543), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Latitude = 10.821744734671684,
                            Longitude = 106.76019934624064,
                            Name = "Công ty TNHH Creative Engineering",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9059), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5544), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 66,
                            Address = "22/15 đường số 440, Phước Long A, Thành phố Thủ Đức, Thành phố Hồ Chí Minh",
<<<<<<< HEAD
                            Code = new Guid("ba110c1a-ada5-4b4f-a5cb-ce30c2fd39e1"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9061), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("7063690b-4e4e-400e-aa68-aaaf96aceab6"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5546), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Latitude = 10.82220109625001,
                            Longitude = 106.75952721927021,
                            Name = "Công Ty Công Nghệ Trí Tuệ Nhân Tạo AITT",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9061), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5547), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 67,
                            Address = "628C Xa lộ Hà Nội, An Phú, Thành phố Thủ Đức, Thành phố Hồ Chí Minh",
<<<<<<< HEAD
                            Code = new Guid("b1b33276-2352-4b65-b585-1c00a699da1c"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9065), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("e84b10df-20e5-408a-ad87-db1f3ee694f0"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5549), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Latitude = 10.805200229819087,
                            Longitude = 106.75206770837505,
                            Name = "Golfzon Park Thảo Điền",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9065), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5550), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 68,
                            Address = "Đường Giang Văn Minh, An Phú, Thành phố Thủ Đức, Thành phố Hồ Chí Minh",
<<<<<<< HEAD
                            Code = new Guid("7d6ac4d4-abef-4398-9b2d-169ca5385c13"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9068), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("19b6ca39-9dab-4d9b-a648-a715d62fb0f4"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5553), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Latitude = 10.803332925851043,
                            Longitude = 106.7488580702081,
                            Name = "Saigon Town and Country Club",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9069), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5554), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 69,
                            Address = "30 đường số 11, Thảo Điền, Thành phố Thủ Đức, Thành phố Hồ Chí Minh",
<<<<<<< HEAD
                            Code = new Guid("c1a0cf09-e8af-4b40-8e0e-b3cb29f57a1a"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9071), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("af1d418c-ab7a-4faf-88ed-975ebf3ec2be"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5556), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Latitude = 10.804563036954756,
                            Longitude = 106.74393815975716,
                            Name = "The Nassim Thảo Điền",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9071), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5557), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 70,
                            Address = "RP4W+V3J đường Mai Chí Thọ, Thảo Điền, Thành phố Thủ Đức, Thành phố Hồ Chí Minh",
<<<<<<< HEAD
                            Code = new Guid("75d30f18-5c38-4293-93dd-f61b47be4e59"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9073), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("5170c26c-679d-4533-9a23-5f0d88d53f00"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5559), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Latitude = 10.807262850388623,
                            Longitude = 106.74530677686282,
                            Name = "Blue Mangoo Software",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9073), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5560), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 71,
                            Address = "51 đường Quốc Hương, Thảo Điền, Thành phố Thủ Đức, Thành phố Hồ Chí Minh",
<<<<<<< HEAD
                            Code = new Guid("e34acb02-2311-4473-a3ea-7611fa7f7aff"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9075), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("22447da4-7b80-4e90-bc73-39b477320d48"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5562), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Latitude = 10.805401459108982,
                            Longitude = 106.73134189331353,
                            Name = "Trường Đại học Văn hóa TP.HCM - Cơ sở 1",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9075), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5563), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 72,
                            Address = "6-6A 8 đường số 44, Thảo Điền, Thành phố Thủ Đức, Thành phố Hồ Chí Minh",
<<<<<<< HEAD
                            Code = new Guid("ec81f13c-a82b-462d-a680-4c3faeda5af6"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9077), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("0f27abf6-51e2-4d0d-aa1f-60256a4decfe"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5612), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Latitude = 10.806048021383644,
                            Longitude = 106.72928364712546,
                            Name = "Trường song ngữ quốc tế Horizon",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9078), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5612), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 73,
                            Address = "45 đường số 44, Thảo Điền, Thành phố Thủ Đức, Thành phố Hồ Chí Minh",
<<<<<<< HEAD
                            Code = new Guid("13655bc6-98f2-4915-897e-c94856fe967e"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9079), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("e9cfc46a-4b4e-489f-9813-0a8de6ec55d8"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5615), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Latitude = 10.809270864831371,
                            Longitude = 106.72846844993934,
                            Name = "Công Ty TNHH Dịch Vụ Địa Ốc Thảo Điền",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9080), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5616), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 74,
                            Address = "40 đường Nguyễn Văn Hưởng, Thảo Điền, Thành phố Thủ Đức, Thành Phố Hồ Chí Minh",
<<<<<<< HEAD
                            Code = new Guid("9f46a077-e528-4379-b8d6-8f1ae45fc404"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9081), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("a3a4b35d-a837-4efa-88e0-b6cfae2fd08c"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5618), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Latitude = 10.806246963358644,
                            Longitude = 106.72589627507526,
                            Name = "Công Ty TNHH Một Thành Viên Ánh Sáng Hoàng ĐP",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9082), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5618), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 75,
                            Address = "1 đường Xuân Thủy, Thảo Điền, Thành phố Thủ Đức, Thành phố Hồ Chí Minh",
<<<<<<< HEAD
                            Code = new Guid("34531eea-c514-4b27-97a5-52f227faf701"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9085), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("430cc16c-0796-4771-bfe5-f02e95da4dba"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5621), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Latitude = 10.803458791026568,
                            Longitude = 106.72806621661472,
                            Name = "Trường đại học Quốc Tế Thành phố Hồ Chí Minh",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9086), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5621), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 76,
                            Address = "91B đường Trần Não, Bình Khánh, Thành phố Thủ Đức, Thành phố Hồ Chí Minh",
<<<<<<< HEAD
                            Code = new Guid("c96aa220-497c-46c7-a783-e5ff7bdbecdb"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9087), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("f50f77ca-7524-4885-a42b-fe8270dd12d2"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5623), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Latitude = 10.797897644669561,
                            Longitude = 106.73143206816108,
                            Name = "SCB Trần Não - Ngân hàng TMCP Sài Gòn",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9088), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5624), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 77,
                            Address = "6 đường số 26, Bình Khánh, Thành phố Thủ Đức, Thành phố Hồ Chí Minh",
<<<<<<< HEAD
                            Code = new Guid("8acf5156-5943-41e5-8a1e-fab66fdfcaa6"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9090), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("1a8f15c5-c278-45da-97b8-b864871048f7"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5626), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Latitude = 10.793905585531592,
                            Longitude = 106.7293406127999,
                            Name = "Công Ty TNHH Xuất Nhập Khẩu Máy Móc Và Phụ Tùng Ô Tô Hưng Thịnh",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9090), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5627), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 78,
                            Address = "220 đường Trần Não, Bình An, Thành phố Thủ Đức, Thành phố Hồ Chí Minh",
<<<<<<< HEAD
                            Code = new Guid("801739ba-0399-43d2-bc99-7b2b1300b570"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9092), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("82c84980-d673-4dae-907d-7638d2b20f93"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5629), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Latitude = 10.789891277804319,
                            Longitude = 106.72895399848618,
                            Name = "Tòa nhà Microspace Building",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9092), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5630), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 79,
                            Address = "18/2 đường số 35, Bình An, Thành phố Thủ Đức, Thành phố Hồ Chí Minh",
<<<<<<< HEAD
                            Code = new Guid("c7bd2b34-0800-46e3-a9a4-d61c2f299bbd"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9094), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("3ae08ea8-2409-477b-a6d1-8f1625895071"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5632), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Latitude = 10.786711346588366,
                            Longitude = 106.72783903612815,
                            Name = "Công ty TNHH vận tải - thi công cơ giới Xuân Thao",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9095), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5633), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 80,
                            Address = "9 đường Trần Não, Bình An, Thành phố Thủ Đức, Thành phố Hồ Chí Minh",
<<<<<<< HEAD
                            Code = new Guid("b83773a0-35a1-4bb1-a587-7053aede4156"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9096), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("dd1b7a89-a143-4f7f-8dff-27aebce053f4"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5637), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Latitude = 10.780549913195312,
                            Longitude = 106.72849002239546,
                            Name = "Công Ty TNHH Ch Resource Vietnam",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9097), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5638), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 81,
                            Address = "10 đường số 39, Bình Trưng Tây, Thành Phố Thủ Đức, Thành phố Hồ Chí Minh",
<<<<<<< HEAD
                            Code = new Guid("03508a90-6297-44a2-8ed1-e195f81184aa"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9099), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("3860f89b-7794-41e4-8570-8cf96cca2635"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5640), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Latitude = 10.786744237747117,
                            Longitude = 106.72969521262236,
                            Name = "Công Ty TNHH Thương Mại Và Dịch Vụ Nhật Vượng",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9099), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5641), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 82,
                            Address = "125 đường Trần Não, Bình An, Thành phố Thủ Đức, Thành phố Hồ Chí Minh",
<<<<<<< HEAD
                            Code = new Guid("b05b97a2-bbe1-4e35-b17e-9a6c149ffa46"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9101), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("39104cb9-5a2f-471b-af9e-5d0503e0d515"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5643), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Latitude = 10.792554668741762,
                            Longitude = 106.73067177064897,
                            Name = "Ngân hàng TMCP Kỹ thương Việt Nam (Techcombank)- Chi nhánh Gia Định - PGD Trần Não",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9101), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5644), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 83,
                            Address = "25 Ung Văn Khiêm, Phường 25, Bình Thạnh, Thành phố Hồ Chí Minh",
<<<<<<< HEAD
                            Code = new Guid("9a182a80-c92a-495c-aa76-3c7da33576b4"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9105), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("bffd57e8-73f6-4611-9de6-0b42b131dda0"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5646), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Latitude = 10.798737294717368,
                            Longitude = 106.72126763097279,
                            Name = "Tòa Nhà Melody Tower, Cty Toi",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9106), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5647), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 84,
                            Address = "561A đường Điện Biên Phủ, Phường 25, Bình Thạnh, Thành phố Hồ Chí Minh",
<<<<<<< HEAD
                            Code = new Guid("c802d9ed-a59d-4851-a2f2-fb15a41269f1"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9107), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("9b46daf7-c5ba-4956-8fc2-aff867981b9c"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5649), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Latitude = 10.799795706410299,
                            Longitude = 106.71843607604076,
                            Name = "Pearl Plaza Văn Thánh",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9108), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5649), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 85,
                            Address = "15 Nguyễn Văn Thương, Phường 25, Bình Thạnh, Thành phố Hồ Chí Minh",
<<<<<<< HEAD
                            Code = new Guid("6d25a770-99db-4667-80ff-1c3ce239366f"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9109), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("9da84870-2616-464b-b948-288587ae2f9e"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5652), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Latitude = 10.802303255825205,
                            Longitude = 106.71812789316297,
                            Name = "Căn hộ Wilton Tower",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9110), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5652), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 86,
                            Address = "02 Võ Oanh, Phường 25, Bình Thạnh, Thành phố Hồ Chí Minh",
<<<<<<< HEAD
                            Code = new Guid("d7a1d1bc-3eba-4606-b2c6-d4cb012fa079"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9112), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("6ba92f05-d753-470c-8110-eac0e9e4107d"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5654), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Latitude = 10.804470786914793,
                            Longitude = 106.7167285754774,
                            Name = "Trường đại học Giao Thông Vận Tải",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9112), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5655), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 87,
                            Address = "15 Đường D5, Phường 25, Bình Thạnh, Thành phố Hồ Chí Minh",
<<<<<<< HEAD
                            Code = new Guid("2d483cd2-5232-41ea-9252-8d9a69b96670"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9114), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("e3f81774-26b5-448f-91de-88f1ae45a952"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5657), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Latitude = 10.806564326384949,
                            Longitude = 106.71296786250547,
                            Name = "Trường Đại học Ngoại thương - Cơ sở 2",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9114), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5658), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        });
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Guid>("Code")
                        .HasColumnType("uuid")
                        .HasColumnName("code");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("created_by");

                    b.Property<DateTimeOffset?>("DateOfBirth")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_of_birth");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deleted_at");

                    b.Property<int?>("FileId")
                        .HasColumnType("integer")
                        .HasColumnName("file_id");

                    b.Property<int>("Gender")
                        .HasColumnType("integer")
                        .HasColumnName("gender");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("name");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("updated_by");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("FileId")
                        .IsUnique();

                    b.ToTable("users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
<<<<<<< HEAD
                            Code = new Guid("52027a9e-10a6-4c06-9cba-aec2d597b827"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(7983), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("24d2c9a8-b254-4e79-abaa-9f7819810c47"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4205), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            FileId = 1,
                            Gender = 1,
                            Name = "Quach Dai Loi",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(7984), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4206), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 2,
<<<<<<< HEAD
                            Code = new Guid("29a53b6b-73d6-424b-b86e-c401d267f6b1"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8000), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("58481fa5-67df-44b2-8566-a8caf3c94010"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4225), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            FileId = 2,
                            Gender = 1,
                            Name = "Do Trong Dat",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8000), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4226), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 3,
<<<<<<< HEAD
                            Code = new Guid("af930991-33a2-43ab-8525-77576bcc5f6f"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8051), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("1f11583d-c246-4bde-b3c8-ef3f1ed25ef0"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4239), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            FileId = 3,
                            Gender = 1,
                            Name = "Nguyen Dang Khoa",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8052), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4240), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 4,
<<<<<<< HEAD
                            Code = new Guid("e28eef52-c16a-48e3-b025-ffa8dd4f44a4"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8064), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("4b591d4c-fa83-4128-8827-7647391d42a4"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4257), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            FileId = 4,
                            Gender = 1,
                            Name = "Than Thanh Duy",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8064), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4258), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 5,
<<<<<<< HEAD
                            Code = new Guid("07d5ec68-de71-475b-92d5-a394ecc981f9"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8075), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("235a9a2a-283c-41ac-b926-5b05d6fd1a49"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4270), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            FileId = 5,
                            Gender = 1,
                            Name = "Loi Quach",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8076), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4271), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 6,
<<<<<<< HEAD
                            Code = new Guid("e3a66cd0-2664-454c-b686-ca767d03461e"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8087), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("dd4b63f6-eb27-474e-ab5c-902bad76b5c4"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4285), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            FileId = 6,
                            Gender = 1,
                            Name = "Dat Do",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8088), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4286), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 7,
<<<<<<< HEAD
                            Code = new Guid("f0162df6-5ad9-4511-8a9f-43ba58daac7d"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8097), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("db5c2888-6cc8-413f-a43a-dbae7d670c5f"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4299), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            FileId = 7,
                            Gender = 1,
                            Name = "Khoa Nguyen",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8098), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4300), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 8,
<<<<<<< HEAD
                            Code = new Guid("fa80e251-853a-4a17-a548-d7b204c82eb0"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8108), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("168da84a-a13d-4ea2-bea4-2fd931164672"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4316), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            FileId = 8,
                            Gender = 1,
                            Name = "Thanh Duy",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8108), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4317), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 9,
<<<<<<< HEAD
                            Code = new Guid("2cbc92e7-5aad-48f2-be89-4a803a5e13ec"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8119), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("e1ee5639-51bc-4670-b07d-36640d8dd24a"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4378), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            FileId = 13,
                            Gender = 1,
                            Name = "Admin Quach Dai Loi",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8120), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4379), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 10,
<<<<<<< HEAD
                            Code = new Guid("1b7e2aaa-bf52-4aaf-b687-9990025d36f5"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8131), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("f77c4960-c51a-4ed8-8527-715de8a29e8c"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4396), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Gender = 1,
                            Name = "Admin Than Thanh Duy",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8131), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4398), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 11,
<<<<<<< HEAD
                            Code = new Guid("a49687cd-0d89-47b9-9daa-dfb9210c4d0d"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8141), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("f81496e0-81cc-415d-93ae-a9b0bb925061"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4410), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Gender = 1,
                            Name = "Admin Nguyen Dang Khoa",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8142), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4412), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 12,
<<<<<<< HEAD
                            Code = new Guid("6a9b58b7-02ab-448b-b7d2-095f7a559fbc"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8151), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("e345d811-c4e0-43dd-a044-0ea020e8f1fa"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4428), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Gender = 1,
                            Name = "Admin Do Trong Dat",
                            Status = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(8152), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(4430), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        });
                });

            modelBuilder.Entity("Domain.Entities.UserRoom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("created_by");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deleted_at");

                    b.Property<DateTimeOffset>("LastSeenTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
<<<<<<< HEAD
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 661, DateTimeKind.Unspecified).AddTicks(3231), new TimeSpan(0, 7, 0, 0, 0)))
=======
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 448, DateTimeKind.Unspecified).AddTicks(4712), new TimeSpan(0, 7, 0, 0, 0)))
>>>>>>> booking_datdt
                        .HasColumnName("last_seen_time");

                    b.Property<int>("RoomId")
                        .HasColumnType("integer")
                        .HasColumnName("room_id");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(1)
                        .HasColumnName("status");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("updated_by");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.HasIndex("UserId");

                    b.ToTable("user_rooms", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Guid>("Code")
                        .HasColumnType("uuid")
                        .HasColumnName("code");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("created_by");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deleted_at");

                    b.Property<string>("LicensePlate")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("license_plate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("updated_by");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.Property<int>("VehicleTypeId")
                        .HasColumnType("integer")
                        .HasColumnName("vehicle_type_id");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.HasIndex("VehicleTypeId");

                    b.ToTable("vehicles", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.VehicleType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Guid>("Code")
                        .HasColumnType("uuid")
                        .HasColumnName("code");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("created_by");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deleted_at");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("name");

                    b.Property<int>("Slot")
                        .HasColumnType("integer")
                        .HasColumnName("slot");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("status");

                    b.Property<int>("Type")
                        .HasColumnType("integer")
                        .HasColumnName("type");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("updated_by");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("vehicle_types", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
<<<<<<< HEAD
                            Code = new Guid("2ea7b52a-e9d2-482e-a503-62b86251a0ae"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9205), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("2c625d2a-a6bc-4e92-a5d8-68e49a16528d"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5754), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Name = "ViRide",
                            Slot = 2,
                            Status = 0,
                            Type = 0,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9205), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5755), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 2,
<<<<<<< HEAD
                            Code = new Guid("fe4e1d52-f1f2-4d9b-8068-1f2f3977b7be"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9219), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("512e9906-5716-496e-ba3c-2458ece90610"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5772), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Name = "ViCar-4",
                            Slot = 4,
                            Status = 0,
                            Type = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9220), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5773), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 3,
<<<<<<< HEAD
                            Code = new Guid("f2ad9e72-ca84-43ba-86ec-8b66643f5c1a"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9232), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            Code = new Guid("a99c7ab8-55f9-49c4-9581-fd2dfc55118d"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5786), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            CreatedBy = 0,
                            Name = "ViCar-7",
                            Slot = 7,
                            Status = 0,
                            Type = 1,
<<<<<<< HEAD
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 1, 19, 57, 7, 666, DateTimeKind.Unspecified).AddTicks(9233), new TimeSpan(0, 7, 0, 0, 0)),
=======
                            UpdatedAt = new DateTimeOffset(new DateTime(2022, 10, 3, 21, 55, 23, 455, DateTimeKind.Unspecified).AddTicks(5787), new TimeSpan(0, 7, 0, 0, 0)),
>>>>>>> booking_datdt
                            UpdatedBy = 0
                        });
                });

            modelBuilder.Entity("Domain.Entities.VerifiedCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("code");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("created_by");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deleted_at");

                    b.Property<DateTimeOffset>("ExpiredTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("expired_time");

                    b.Property<string>("Registration")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("registration");

                    b.Property<int>("RegistrationType")
                        .HasColumnType("integer")
                        .HasColumnName("registration_type");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean")
                        .HasColumnName("status");

                    b.Property<int>("Type")
                        .HasColumnType("integer")
                        .HasColumnName("type");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("updated_by");

                    b.HasKey("Id");

                    b.ToTable("verified_codes", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Account", b =>
                {
                    b.HasOne("Domain.Entities.Role", "Role")
                        .WithMany("Accounts")
                        .HasForeignKey("RoleId");

                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany("Accounts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.Banner", b =>
                {
                    b.HasOne("Domain.Entities.AppFile", "File")
                        .WithOne("Banner")
                        .HasForeignKey("Domain.Entities.Banner", "FileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("File");
                });

            modelBuilder.Entity("Domain.Entities.Booking", b =>
                {
                    b.HasOne("Domain.Entities.Promotion", "Promotion")
                        .WithMany("Bookings")
                        .HasForeignKey("PromotionId");

                    b.HasOne("Domain.Entities.Route", "Route")
                        .WithMany("Bookings")
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany("Bookings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.VehicleType", "VehicleType")
                        .WithMany("Bookings")
                        .HasForeignKey("VehicleTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Promotion");

                    b.Navigation("Route");

                    b.Navigation("User");

                    b.Navigation("VehicleType");
                });

            modelBuilder.Entity("Domain.Entities.BookingDetail", b =>
                {
                    b.HasOne("Domain.Entities.Booking", "Booking")
                        .WithMany("BookingDetails")
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.User", "Driver")
                        .WithMany("BookingDetails")
                        .HasForeignKey("DriverId");

                    b.HasOne("Domain.Entities.Room", "MessageRoom")
                        .WithOne("Booking")
                        .HasForeignKey("Domain.Entities.BookingDetail", "MessageRoomId");

                    b.Navigation("Booking");

                    b.Navigation("Driver");

                    b.Navigation("MessageRoom");
                });

            modelBuilder.Entity("Domain.Entities.BookingDetailDriver", b =>
                {
                    b.HasOne("Domain.Entities.BookingDetail", "BookingDetail")
                        .WithMany("BookingDetailDrivers")
                        .HasForeignKey("BookingDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.User", "Driver")
                        .WithMany("BookingDetailDrivers")
                        .HasForeignKey("DriverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BookingDetail");

                    b.Navigation("Driver");
                });

            modelBuilder.Entity("Domain.Entities.Fare", b =>
                {
                    b.HasOne("Domain.Entities.VehicleType", "VehicleType")
                        .WithOne("Fare")
                        .HasForeignKey("Domain.Entities.Fare", "VehicleTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VehicleType");
                });

            modelBuilder.Entity("Domain.Entities.FareTimeline", b =>
                {
                    b.HasOne("Domain.Entities.Fare", "Fare")
                        .WithMany("FareTimelines")
                        .HasForeignKey("FareId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fare");
                });

            modelBuilder.Entity("Domain.Entities.Message", b =>
                {
                    b.HasOne("Domain.Entities.Room", "Room")
                        .WithMany("Messages")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany("Messages")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.Promotion", b =>
                {
                    b.HasOne("Domain.Entities.AppFile", "File")
                        .WithOne("Promotion")
                        .HasForeignKey("Domain.Entities.Promotion", "FileId");

                    b.Navigation("File");
                });

            modelBuilder.Entity("Domain.Entities.PromotionCondition", b =>
                {
                    b.HasOne("Domain.Entities.Promotion", "Promotion")
                        .WithOne("PromotionCondition")
                        .HasForeignKey("Domain.Entities.PromotionCondition", "PromotionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Promotion");
                });

            modelBuilder.Entity("Domain.Entities.PromotionUser", b =>
                {
                    b.HasOne("Domain.Entities.PromotionCondition", null)
                        .WithMany("UserPromotionConditions")
                        .HasForeignKey("PromotionConditionId");

                    b.HasOne("Domain.Entities.Promotion", "Promotion")
                        .WithMany("PromotionUsers")
                        .HasForeignKey("PromotionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany("PromotionUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Promotion");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.RouteRoutine", b =>
                {
                    b.HasOne("Domain.Entities.Route", "Route")
                        .WithMany("RouteRoutines")
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany("RouteRoutines")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Route");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.RouteStation", b =>
                {
                    b.HasOne("Domain.Entities.RouteStation", "NextRouteStation")
                        .WithOne()
                        .HasForeignKey("Domain.Entities.RouteStation", "NextRouteStationId");

                    b.HasOne("Domain.Entities.Route", "Route")
                        .WithMany("RouteStations")
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Station", "Station")
                        .WithMany("RouteStations")
                        .HasForeignKey("StationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NextRouteStation");

                    b.Navigation("Route");

                    b.Navigation("Station");
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.HasOne("Domain.Entities.AppFile", "File")
                        .WithOne("User")
                        .HasForeignKey("Domain.Entities.User", "FileId");

                    b.Navigation("File");
                });

            modelBuilder.Entity("Domain.Entities.UserRoom", b =>
                {
                    b.HasOne("Domain.Entities.Room", "Room")
                        .WithMany("UserRooms")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany("UserRooms")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.Vehicle", b =>
                {
                    b.HasOne("Domain.Entities.User", "User")
                        .WithOne("Vehicle")
                        .HasForeignKey("Domain.Entities.Vehicle", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.VehicleType", "VehicleType")
                        .WithMany("Vehicles")
                        .HasForeignKey("VehicleTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("VehicleType");
                });

            modelBuilder.Entity("Domain.Entities.AppFile", b =>
                {
                    b.Navigation("Banner")
                        .IsRequired();

                    b.Navigation("Promotion")
                        .IsRequired();

                    b.Navigation("User")
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Entities.Booking", b =>
                {
                    b.Navigation("BookingDetails");
                });

            modelBuilder.Entity("Domain.Entities.BookingDetail", b =>
                {
                    b.Navigation("BookingDetailDrivers");
                });

            modelBuilder.Entity("Domain.Entities.Fare", b =>
                {
                    b.Navigation("FareTimelines");
                });

            modelBuilder.Entity("Domain.Entities.Promotion", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("PromotionCondition")
                        .IsRequired();

                    b.Navigation("PromotionUsers");
                });

            modelBuilder.Entity("Domain.Entities.PromotionCondition", b =>
                {
                    b.Navigation("UserPromotionConditions");
                });

            modelBuilder.Entity("Domain.Entities.Role", b =>
                {
                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("Domain.Entities.Room", b =>
                {
                    b.Navigation("Booking")
                        .IsRequired();

                    b.Navigation("Messages");

                    b.Navigation("UserRooms");
                });

            modelBuilder.Entity("Domain.Entities.Route", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("RouteRoutines");

                    b.Navigation("RouteStations");
                });

            modelBuilder.Entity("Domain.Entities.Station", b =>
                {
                    b.Navigation("RouteStations");
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Navigation("Accounts");

                    b.Navigation("BookingDetailDrivers");

                    b.Navigation("BookingDetails");

                    b.Navigation("Bookings");

                    b.Navigation("Messages");

                    b.Navigation("PromotionUsers");

                    b.Navigation("RouteRoutines");

                    b.Navigation("UserRooms");

                    b.Navigation("Vehicle")
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Entities.VehicleType", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("Fare")
                        .IsRequired();

                    b.Navigation("Vehicles");
                });
#pragma warning restore 612, 618
        }
    }
}
